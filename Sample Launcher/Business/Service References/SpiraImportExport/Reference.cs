//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.235
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.SpiraTest.Web.Services.v3_0")]
    [System.SerializableAttribute()]
    public partial struct ServiceFaultMessage : System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StackTraceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StackTrace {
            get {
                return this.StackTraceField;
            }
            set {
                if ((object.ReferenceEquals(this.StackTraceField, value) != true)) {
                    this.StackTraceField = value;
                    this.RaisePropertyChanged("StackTrace");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RemoteUser", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.SpiraTest.Web.Services.v3_0.Dat" +
        "aObjects")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteProjectUser))]
    public partial class RemoteUser : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AdminField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FullNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LdapDnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MiddleInitialField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> UserIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Active {
            get {
                return this.ActiveField;
            }
            set {
                if ((this.ActiveField.Equals(value) != true)) {
                    this.ActiveField = value;
                    this.RaisePropertyChanged("Active");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Admin {
            get {
                return this.AdminField;
            }
            set {
                if ((this.AdminField.Equals(value) != true)) {
                    this.AdminField = value;
                    this.RaisePropertyChanged("Admin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmailAddress {
            get {
                return this.EmailAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailAddressField, value) != true)) {
                    this.EmailAddressField = value;
                    this.RaisePropertyChanged("EmailAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FullName {
            get {
                return this.FullNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FullNameField, value) != true)) {
                    this.FullNameField = value;
                    this.RaisePropertyChanged("FullName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LdapDn {
            get {
                return this.LdapDnField;
            }
            set {
                if ((object.ReferenceEquals(this.LdapDnField, value) != true)) {
                    this.LdapDnField = value;
                    this.RaisePropertyChanged("LdapDn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MiddleInitial {
            get {
                return this.MiddleInitialField;
            }
            set {
                if ((object.ReferenceEquals(this.MiddleInitialField, value) != true)) {
                    this.MiddleInitialField = value;
                    this.RaisePropertyChanged("MiddleInitial");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((this.UserIdField.Equals(value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RemoteProjectUser", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.SpiraTest.Web.Services.v3_0.Dat" +
        "aObjects")]
    [System.SerializableAttribute()]
    public partial class RemoteProjectUser : Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteUser {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ProjectIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ProjectRoleIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProjectRoleNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ProjectId {
            get {
                return this.ProjectIdField;
            }
            set {
                if ((this.ProjectIdField.Equals(value) != true)) {
                    this.ProjectIdField = value;
                    this.RaisePropertyChanged("ProjectId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ProjectRoleId {
            get {
                return this.ProjectRoleIdField;
            }
            set {
                if ((this.ProjectRoleIdField.Equals(value) != true)) {
                    this.ProjectRoleIdField = value;
                    this.RaisePropertyChanged("ProjectRoleId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProjectRoleName {
            get {
                return this.ProjectRoleNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ProjectRoleNameField, value) != true)) {
                    this.ProjectRoleNameField = value;
                    this.RaisePropertyChanged("ProjectRoleName");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RemoteComment", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.SpiraTest.Web.Services.v3_0.Dat" +
        "aObjects")]
    [System.SerializableAttribute()]
    public partial class RemoteComment : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ArtifactIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> CommentIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> CreationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsDeletedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TextField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> UserIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ArtifactId {
            get {
                return this.ArtifactIdField;
            }
            set {
                if ((this.ArtifactIdField.Equals(value) != true)) {
                    this.ArtifactIdField = value;
                    this.RaisePropertyChanged("ArtifactId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> CommentId {
            get {
                return this.CommentIdField;
            }
            set {
                if ((this.CommentIdField.Equals(value) != true)) {
                    this.CommentIdField = value;
                    this.RaisePropertyChanged("CommentId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CreationDate {
            get {
                return this.CreationDateField;
            }
            set {
                if ((this.CreationDateField.Equals(value) != true)) {
                    this.CreationDateField = value;
                    this.RaisePropertyChanged("CreationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsDeleted {
            get {
                return this.IsDeletedField;
            }
            set {
                if ((this.IsDeletedField.Equals(value) != true)) {
                    this.IsDeletedField = value;
                    this.RaisePropertyChanged("IsDeleted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Text {
            get {
                return this.TextField;
            }
            set {
                if ((object.ReferenceEquals(this.TextField, value) != true)) {
                    this.TextField = value;
                    this.RaisePropertyChanged("Text");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((this.UserIdField.Equals(value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RemoteFilter", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.SpiraTest.Web.Services.v3_0.Dat" +
        "aObjects")]
    [System.SerializableAttribute()]
    public partial class RemoteFilter : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.DateRange DateRangeValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> IntValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.MultiValueFilter MultiValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PropertyNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StringValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.DateRange DateRangeValue {
            get {
                return this.DateRangeValueField;
            }
            set {
                if ((object.ReferenceEquals(this.DateRangeValueField, value) != true)) {
                    this.DateRangeValueField = value;
                    this.RaisePropertyChanged("DateRangeValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> IntValue {
            get {
                return this.IntValueField;
            }
            set {
                if ((this.IntValueField.Equals(value) != true)) {
                    this.IntValueField = value;
                    this.RaisePropertyChanged("IntValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.MultiValueFilter MultiValue {
            get {
                return this.MultiValueField;
            }
            set {
                if ((object.ReferenceEquals(this.MultiValueField, value) != true)) {
                    this.MultiValueField = value;
                    this.RaisePropertyChanged("MultiValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PropertyName {
            get {
                return this.PropertyNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PropertyNameField, value) != true)) {
                    this.PropertyNameField = value;
                    this.RaisePropertyChanged("PropertyName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StringValue {
            get {
                return this.StringValueField;
            }
            set {
                if ((object.ReferenceEquals(this.StringValueField, value) != true)) {
                    this.StringValueField = value;
                    this.RaisePropertyChanged("StringValue");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DateRange", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.SpiraTest.Web.Services.v3_0.Dat" +
        "aObjects")]
    [System.SerializableAttribute()]
    public partial class DateRange : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ConsiderTimesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> EndDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> StartDateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ConsiderTimes {
            get {
                return this.ConsiderTimesField;
            }
            set {
                if ((this.ConsiderTimesField.Equals(value) != true)) {
                    this.ConsiderTimesField = value;
                    this.RaisePropertyChanged("ConsiderTimes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> EndDate {
            get {
                return this.EndDateField;
            }
            set {
                if ((this.EndDateField.Equals(value) != true)) {
                    this.EndDateField = value;
                    this.RaisePropertyChanged("EndDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> StartDate {
            get {
                return this.StartDateField;
            }
            set {
                if ((this.StartDateField.Equals(value) != true)) {
                    this.StartDateField = value;
                    this.RaisePropertyChanged("StartDate");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MultiValueFilter", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.SpiraTest.Web.Services.v3_0.Dat" +
        "aObjects")]
    [System.SerializableAttribute()]
    public partial class MultiValueFilter : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsNoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int[] ValuesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsNone {
            get {
                return this.IsNoneField;
            }
            set {
                if ((this.IsNoneField.Equals(value) != true)) {
                    this.IsNoneField = value;
                    this.RaisePropertyChanged("IsNone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int[] Values {
            get {
                return this.ValuesField;
            }
            set {
                if ((object.ReferenceEquals(this.ValuesField, value) != true)) {
                    this.ValuesField = value;
                    this.RaisePropertyChanged("Values");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RemoteSort", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.SpiraTest.Web.Services.v3_0.Dat" +
        "aObjects")]
    [System.SerializableAttribute()]
    public partial class RemoteSort : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PropertyNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SortAscendingField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PropertyName {
            get {
                return this.PropertyNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PropertyNameField, value) != true)) {
                    this.PropertyNameField = value;
                    this.RaisePropertyChanged("PropertyName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool SortAscending {
            get {
                return this.SortAscendingField;
            }
            set {
                if ((this.SortAscendingField.Equals(value) != true)) {
                    this.SortAscendingField = value;
                    this.RaisePropertyChanged("SortAscending");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RemoteAutomationHost", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.SpiraTest.Web.Services.v3_0.Dat" +
        "aObjects")]
    [System.SerializableAttribute()]
    public partial class RemoteAutomationHost : Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteArtifact {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AutomationHostIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime LastUpdateDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ProjectIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TokenField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Active {
            get {
                return this.ActiveField;
            }
            set {
                if ((this.ActiveField.Equals(value) != true)) {
                    this.ActiveField = value;
                    this.RaisePropertyChanged("Active");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AutomationHostId {
            get {
                return this.AutomationHostIdField;
            }
            set {
                if ((this.AutomationHostIdField.Equals(value) != true)) {
                    this.AutomationHostIdField = value;
                    this.RaisePropertyChanged("AutomationHostId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LastUpdateDate {
            get {
                return this.LastUpdateDateField;
            }
            set {
                if ((this.LastUpdateDateField.Equals(value) != true)) {
                    this.LastUpdateDateField = value;
                    this.RaisePropertyChanged("LastUpdateDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ProjectId {
            get {
                return this.ProjectIdField;
            }
            set {
                if ((this.ProjectIdField.Equals(value) != true)) {
                    this.ProjectIdField = value;
                    this.RaisePropertyChanged("ProjectId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Token {
            get {
                return this.TokenField;
            }
            set {
                if ((object.ReferenceEquals(this.TokenField, value) != true)) {
                    this.TokenField = value;
                    this.RaisePropertyChanged("Token");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RemoteArtifact", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.SpiraTest.Web.Services.v3_0.Dat" +
        "aObjects")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteTask))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteTestCase))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteTestStep))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteTestRun))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteManualTestRun))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteAutomatedTestRun))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteTestSet))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteIncident))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteRelease))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteRequirement))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteAutomationHost))]
    public partial class RemoteArtifact : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> List01Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> List02Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> List03Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> List04Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> List05Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> List06Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> List07Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> List08Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> List09Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> List10Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Text01Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Text02Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Text03Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Text04Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Text05Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Text06Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Text07Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Text08Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Text09Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Text10Field;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> List01 {
            get {
                return this.List01Field;
            }
            set {
                if ((this.List01Field.Equals(value) != true)) {
                    this.List01Field = value;
                    this.RaisePropertyChanged("List01");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> List02 {
            get {
                return this.List02Field;
            }
            set {
                if ((this.List02Field.Equals(value) != true)) {
                    this.List02Field = value;
                    this.RaisePropertyChanged("List02");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> List03 {
            get {
                return this.List03Field;
            }
            set {
                if ((this.List03Field.Equals(value) != true)) {
                    this.List03Field = value;
                    this.RaisePropertyChanged("List03");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> List04 {
            get {
                return this.List04Field;
            }
            set {
                if ((this.List04Field.Equals(value) != true)) {
                    this.List04Field = value;
                    this.RaisePropertyChanged("List04");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> List05 {
            get {
                return this.List05Field;
            }
            set {
                if ((this.List05Field.Equals(value) != true)) {
                    this.List05Field = value;
                    this.RaisePropertyChanged("List05");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> List06 {
            get {
                return this.List06Field;
            }
            set {
                if ((this.List06Field.Equals(value) != true)) {
                    this.List06Field = value;
                    this.RaisePropertyChanged("List06");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> List07 {
            get {
                return this.List07Field;
            }
            set {
                if ((this.List07Field.Equals(value) != true)) {
                    this.List07Field = value;
                    this.RaisePropertyChanged("List07");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> List08 {
            get {
                return this.List08Field;
            }
            set {
                if ((this.List08Field.Equals(value) != true)) {
                    this.List08Field = value;
                    this.RaisePropertyChanged("List08");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> List09 {
            get {
                return this.List09Field;
            }
            set {
                if ((this.List09Field.Equals(value) != true)) {
                    this.List09Field = value;
                    this.RaisePropertyChanged("List09");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> List10 {
            get {
                return this.List10Field;
            }
            set {
                if ((this.List10Field.Equals(value) != true)) {
                    this.List10Field = value;
                    this.RaisePropertyChanged("List10");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Text01 {
            get {
                return this.Text01Field;
            }
            set {
                if ((object.ReferenceEquals(this.Text01Field, value) != true)) {
                    this.Text01Field = value;
                    this.RaisePropertyChanged("Text01");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Text02 {
            get {
                return this.Text02Field;
            }
            set {
                if ((object.ReferenceEquals(this.Text02Field, value) != true)) {
                    this.Text02Field = value;
                    this.RaisePropertyChanged("Text02");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Text03 {
            get {
                return this.Text03Field;
            }
            set {
                if ((object.ReferenceEquals(this.Text03Field, value) != true)) {
                    this.Text03Field = value;
                    this.RaisePropertyChanged("Text03");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Text04 {
            get {
                return this.Text04Field;
            }
            set {
                if ((object.ReferenceEquals(this.Text04Field, value) != true)) {
                    this.Text04Field = value;
                    this.RaisePropertyChanged("Text04");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Text05 {
            get {
                return this.Text05Field;
            }
            set {
                if ((object.ReferenceEquals(this.Text05Field, value) != true)) {
                    this.Text05Field = value;
                    this.RaisePropertyChanged("Text05");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Text06 {
            get {
                return this.Text06Field;
            }
            set {
                if ((object.ReferenceEquals(this.Text06Field, value) != true)) {
                    this.Text06Field = value;
                    this.RaisePropertyChanged("Text06");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Text07 {
            get {
                return this.Text07Field;
            }
            set {
                if ((object.ReferenceEquals(this.Text07Field, value) != true)) {
                    this.Text07Field = value;
                    this.RaisePropertyChanged("Text07");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Text08 {
            get {
                return this.Text08Field;
            }
            set {
                if ((object.ReferenceEquals(this.Text08Field, value) != true)) {
                    this.Text08Field = value;
                    this.RaisePropertyChanged("Text08");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Text09 {
            get {
                return this.Text09Field;
            }
            set {
                if ((object.ReferenceEquals(this.Text09Field, value) != true)) {
                    this.Text09Field = value;
                    this.RaisePropertyChanged("Text09");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Text10 {
            get {
                return this.Text10Field;
            }
            set {
                if ((object.ReferenceEquals(this.Text10Field, value) != true)) {
                    this.Text10Field = value;
                    this.RaisePropertyChanged("Text10");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RemoteTask", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.SpiraTest.Web.Services.v3_0.Dat" +
        "aObjects")]
    [System.SerializableAttribute()]
    public partial class RemoteTask : Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteArtifact {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ActualEffortField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CompletionPercentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> CreatorIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> EndDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> EstimatedEffortField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime LastUpdateDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> OwnerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OwnerNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ProjectIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProjectNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ProjectedEffortField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ReleaseIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReleaseVersionNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> RemainingEffortField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> RequirementIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RequirementNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> StartDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> TaskIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> TaskPriorityIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TaskPriorityNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TaskStatusIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TaskStatusNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ActualEffort {
            get {
                return this.ActualEffortField;
            }
            set {
                if ((this.ActualEffortField.Equals(value) != true)) {
                    this.ActualEffortField = value;
                    this.RaisePropertyChanged("ActualEffort");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CompletionPercent {
            get {
                return this.CompletionPercentField;
            }
            set {
                if ((this.CompletionPercentField.Equals(value) != true)) {
                    this.CompletionPercentField = value;
                    this.RaisePropertyChanged("CompletionPercent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreationDate {
            get {
                return this.CreationDateField;
            }
            set {
                if ((this.CreationDateField.Equals(value) != true)) {
                    this.CreationDateField = value;
                    this.RaisePropertyChanged("CreationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> CreatorId {
            get {
                return this.CreatorIdField;
            }
            set {
                if ((this.CreatorIdField.Equals(value) != true)) {
                    this.CreatorIdField = value;
                    this.RaisePropertyChanged("CreatorId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> EndDate {
            get {
                return this.EndDateField;
            }
            set {
                if ((this.EndDateField.Equals(value) != true)) {
                    this.EndDateField = value;
                    this.RaisePropertyChanged("EndDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> EstimatedEffort {
            get {
                return this.EstimatedEffortField;
            }
            set {
                if ((this.EstimatedEffortField.Equals(value) != true)) {
                    this.EstimatedEffortField = value;
                    this.RaisePropertyChanged("EstimatedEffort");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LastUpdateDate {
            get {
                return this.LastUpdateDateField;
            }
            set {
                if ((this.LastUpdateDateField.Equals(value) != true)) {
                    this.LastUpdateDateField = value;
                    this.RaisePropertyChanged("LastUpdateDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> OwnerId {
            get {
                return this.OwnerIdField;
            }
            set {
                if ((this.OwnerIdField.Equals(value) != true)) {
                    this.OwnerIdField = value;
                    this.RaisePropertyChanged("OwnerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OwnerName {
            get {
                return this.OwnerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.OwnerNameField, value) != true)) {
                    this.OwnerNameField = value;
                    this.RaisePropertyChanged("OwnerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ProjectId {
            get {
                return this.ProjectIdField;
            }
            set {
                if ((this.ProjectIdField.Equals(value) != true)) {
                    this.ProjectIdField = value;
                    this.RaisePropertyChanged("ProjectId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProjectName {
            get {
                return this.ProjectNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ProjectNameField, value) != true)) {
                    this.ProjectNameField = value;
                    this.RaisePropertyChanged("ProjectName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ProjectedEffort {
            get {
                return this.ProjectedEffortField;
            }
            set {
                if ((this.ProjectedEffortField.Equals(value) != true)) {
                    this.ProjectedEffortField = value;
                    this.RaisePropertyChanged("ProjectedEffort");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ReleaseId {
            get {
                return this.ReleaseIdField;
            }
            set {
                if ((this.ReleaseIdField.Equals(value) != true)) {
                    this.ReleaseIdField = value;
                    this.RaisePropertyChanged("ReleaseId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReleaseVersionNumber {
            get {
                return this.ReleaseVersionNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.ReleaseVersionNumberField, value) != true)) {
                    this.ReleaseVersionNumberField = value;
                    this.RaisePropertyChanged("ReleaseVersionNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> RemainingEffort {
            get {
                return this.RemainingEffortField;
            }
            set {
                if ((this.RemainingEffortField.Equals(value) != true)) {
                    this.RemainingEffortField = value;
                    this.RaisePropertyChanged("RemainingEffort");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> RequirementId {
            get {
                return this.RequirementIdField;
            }
            set {
                if ((this.RequirementIdField.Equals(value) != true)) {
                    this.RequirementIdField = value;
                    this.RaisePropertyChanged("RequirementId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RequirementName {
            get {
                return this.RequirementNameField;
            }
            set {
                if ((object.ReferenceEquals(this.RequirementNameField, value) != true)) {
                    this.RequirementNameField = value;
                    this.RaisePropertyChanged("RequirementName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> StartDate {
            get {
                return this.StartDateField;
            }
            set {
                if ((this.StartDateField.Equals(value) != true)) {
                    this.StartDateField = value;
                    this.RaisePropertyChanged("StartDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> TaskId {
            get {
                return this.TaskIdField;
            }
            set {
                if ((this.TaskIdField.Equals(value) != true)) {
                    this.TaskIdField = value;
                    this.RaisePropertyChanged("TaskId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> TaskPriorityId {
            get {
                return this.TaskPriorityIdField;
            }
            set {
                if ((this.TaskPriorityIdField.Equals(value) != true)) {
                    this.TaskPriorityIdField = value;
                    this.RaisePropertyChanged("TaskPriorityId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TaskPriorityName {
            get {
                return this.TaskPriorityNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TaskPriorityNameField, value) != true)) {
                    this.TaskPriorityNameField = value;
                    this.RaisePropertyChanged("TaskPriorityName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TaskStatusId {
            get {
                return this.TaskStatusIdField;
            }
            set {
                if ((this.TaskStatusIdField.Equals(value) != true)) {
                    this.TaskStatusIdField = value;
                    this.RaisePropertyChanged("TaskStatusId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TaskStatusName {
            get {
                return this.TaskStatusNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TaskStatusNameField, value) != true)) {
                    this.TaskStatusNameField = value;
                    this.RaisePropertyChanged("TaskStatusName");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RemoteTestCase", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.SpiraTest.Web.Services.v3_0.Dat" +
        "aObjects")]
    [System.SerializableAttribute()]
    public partial class RemoteTestCase : Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteArtifact {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AuthorIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AuthorNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AutomationAttachmentIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AutomationEngineIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> EstimatedDurationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ExecutionDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ExecutionStatusIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool FolderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IndentLevelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime LastUpdateDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> OwnerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OwnerNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ProjectIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProjectNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> TestCaseIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> TestCasePriorityIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TestCasePriorityNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteTestStep[] TestStepsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Active {
            get {
                return this.ActiveField;
            }
            set {
                if ((this.ActiveField.Equals(value) != true)) {
                    this.ActiveField = value;
                    this.RaisePropertyChanged("Active");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AuthorId {
            get {
                return this.AuthorIdField;
            }
            set {
                if ((this.AuthorIdField.Equals(value) != true)) {
                    this.AuthorIdField = value;
                    this.RaisePropertyChanged("AuthorId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AuthorName {
            get {
                return this.AuthorNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AuthorNameField, value) != true)) {
                    this.AuthorNameField = value;
                    this.RaisePropertyChanged("AuthorName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AutomationAttachmentId {
            get {
                return this.AutomationAttachmentIdField;
            }
            set {
                if ((this.AutomationAttachmentIdField.Equals(value) != true)) {
                    this.AutomationAttachmentIdField = value;
                    this.RaisePropertyChanged("AutomationAttachmentId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AutomationEngineId {
            get {
                return this.AutomationEngineIdField;
            }
            set {
                if ((this.AutomationEngineIdField.Equals(value) != true)) {
                    this.AutomationEngineIdField = value;
                    this.RaisePropertyChanged("AutomationEngineId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreationDate {
            get {
                return this.CreationDateField;
            }
            set {
                if ((this.CreationDateField.Equals(value) != true)) {
                    this.CreationDateField = value;
                    this.RaisePropertyChanged("CreationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> EstimatedDuration {
            get {
                return this.EstimatedDurationField;
            }
            set {
                if ((this.EstimatedDurationField.Equals(value) != true)) {
                    this.EstimatedDurationField = value;
                    this.RaisePropertyChanged("EstimatedDuration");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ExecutionDate {
            get {
                return this.ExecutionDateField;
            }
            set {
                if ((this.ExecutionDateField.Equals(value) != true)) {
                    this.ExecutionDateField = value;
                    this.RaisePropertyChanged("ExecutionDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ExecutionStatusId {
            get {
                return this.ExecutionStatusIdField;
            }
            set {
                if ((this.ExecutionStatusIdField.Equals(value) != true)) {
                    this.ExecutionStatusIdField = value;
                    this.RaisePropertyChanged("ExecutionStatusId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Folder {
            get {
                return this.FolderField;
            }
            set {
                if ((this.FolderField.Equals(value) != true)) {
                    this.FolderField = value;
                    this.RaisePropertyChanged("Folder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IndentLevel {
            get {
                return this.IndentLevelField;
            }
            set {
                if ((object.ReferenceEquals(this.IndentLevelField, value) != true)) {
                    this.IndentLevelField = value;
                    this.RaisePropertyChanged("IndentLevel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LastUpdateDate {
            get {
                return this.LastUpdateDateField;
            }
            set {
                if ((this.LastUpdateDateField.Equals(value) != true)) {
                    this.LastUpdateDateField = value;
                    this.RaisePropertyChanged("LastUpdateDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> OwnerId {
            get {
                return this.OwnerIdField;
            }
            set {
                if ((this.OwnerIdField.Equals(value) != true)) {
                    this.OwnerIdField = value;
                    this.RaisePropertyChanged("OwnerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OwnerName {
            get {
                return this.OwnerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.OwnerNameField, value) != true)) {
                    this.OwnerNameField = value;
                    this.RaisePropertyChanged("OwnerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ProjectId {
            get {
                return this.ProjectIdField;
            }
            set {
                if ((this.ProjectIdField.Equals(value) != true)) {
                    this.ProjectIdField = value;
                    this.RaisePropertyChanged("ProjectId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProjectName {
            get {
                return this.ProjectNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ProjectNameField, value) != true)) {
                    this.ProjectNameField = value;
                    this.RaisePropertyChanged("ProjectName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> TestCaseId {
            get {
                return this.TestCaseIdField;
            }
            set {
                if ((this.TestCaseIdField.Equals(value) != true)) {
                    this.TestCaseIdField = value;
                    this.RaisePropertyChanged("TestCaseId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> TestCasePriorityId {
            get {
                return this.TestCasePriorityIdField;
            }
            set {
                if ((this.TestCasePriorityIdField.Equals(value) != true)) {
                    this.TestCasePriorityIdField = value;
                    this.RaisePropertyChanged("TestCasePriorityId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TestCasePriorityName {
            get {
                return this.TestCasePriorityNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TestCasePriorityNameField, value) != true)) {
                    this.TestCasePriorityNameField = value;
                    this.RaisePropertyChanged("TestCasePriorityName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteTestStep[] TestSteps {
            get {
                return this.TestStepsField;
            }
            set {
                if ((object.ReferenceEquals(this.TestStepsField, value) != true)) {
                    this.TestStepsField = value;
                    this.RaisePropertyChanged("TestSteps");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RemoteTestStep", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.SpiraTest.Web.Services.v3_0.Dat" +
        "aObjects")]
    [System.SerializableAttribute()]
    public partial class RemoteTestStep : Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteArtifact {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ExecutionStatusIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExpectedResultField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime LastUpdateDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> LinkedTestCaseIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PositionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SampleDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TestCaseIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> TestStepIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ExecutionStatusId {
            get {
                return this.ExecutionStatusIdField;
            }
            set {
                if ((this.ExecutionStatusIdField.Equals(value) != true)) {
                    this.ExecutionStatusIdField = value;
                    this.RaisePropertyChanged("ExecutionStatusId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExpectedResult {
            get {
                return this.ExpectedResultField;
            }
            set {
                if ((object.ReferenceEquals(this.ExpectedResultField, value) != true)) {
                    this.ExpectedResultField = value;
                    this.RaisePropertyChanged("ExpectedResult");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LastUpdateDate {
            get {
                return this.LastUpdateDateField;
            }
            set {
                if ((this.LastUpdateDateField.Equals(value) != true)) {
                    this.LastUpdateDateField = value;
                    this.RaisePropertyChanged("LastUpdateDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> LinkedTestCaseId {
            get {
                return this.LinkedTestCaseIdField;
            }
            set {
                if ((this.LinkedTestCaseIdField.Equals(value) != true)) {
                    this.LinkedTestCaseIdField = value;
                    this.RaisePropertyChanged("LinkedTestCaseId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Position {
            get {
                return this.PositionField;
            }
            set {
                if ((this.PositionField.Equals(value) != true)) {
                    this.PositionField = value;
                    this.RaisePropertyChanged("Position");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SampleData {
            get {
                return this.SampleDataField;
            }
            set {
                if ((object.ReferenceEquals(this.SampleDataField, value) != true)) {
                    this.SampleDataField = value;
                    this.RaisePropertyChanged("SampleData");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TestCaseId {
            get {
                return this.TestCaseIdField;
            }
            set {
                if ((this.TestCaseIdField.Equals(value) != true)) {
                    this.TestCaseIdField = value;
                    this.RaisePropertyChanged("TestCaseId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> TestStepId {
            get {
                return this.TestStepIdField;
            }
            set {
                if ((this.TestStepIdField.Equals(value) != true)) {
                    this.TestStepIdField = value;
                    this.RaisePropertyChanged("TestStepId");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RemoteTestRun", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.SpiraTest.Web.Services.v3_0.Dat" +
        "aObjects")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteManualTestRun))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteAutomatedTestRun))]
    public partial class RemoteTestRun : Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteArtifact {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> EndDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ExecutionStatusIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ReleaseIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime StartDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TestCaseIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> TestRunIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TestRunTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> TestSetIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> TestSetTestCaseIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> TesterIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> EndDate {
            get {
                return this.EndDateField;
            }
            set {
                if ((this.EndDateField.Equals(value) != true)) {
                    this.EndDateField = value;
                    this.RaisePropertyChanged("EndDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ExecutionStatusId {
            get {
                return this.ExecutionStatusIdField;
            }
            set {
                if ((this.ExecutionStatusIdField.Equals(value) != true)) {
                    this.ExecutionStatusIdField = value;
                    this.RaisePropertyChanged("ExecutionStatusId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ReleaseId {
            get {
                return this.ReleaseIdField;
            }
            set {
                if ((this.ReleaseIdField.Equals(value) != true)) {
                    this.ReleaseIdField = value;
                    this.RaisePropertyChanged("ReleaseId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime StartDate {
            get {
                return this.StartDateField;
            }
            set {
                if ((this.StartDateField.Equals(value) != true)) {
                    this.StartDateField = value;
                    this.RaisePropertyChanged("StartDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TestCaseId {
            get {
                return this.TestCaseIdField;
            }
            set {
                if ((this.TestCaseIdField.Equals(value) != true)) {
                    this.TestCaseIdField = value;
                    this.RaisePropertyChanged("TestCaseId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> TestRunId {
            get {
                return this.TestRunIdField;
            }
            set {
                if ((this.TestRunIdField.Equals(value) != true)) {
                    this.TestRunIdField = value;
                    this.RaisePropertyChanged("TestRunId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TestRunTypeId {
            get {
                return this.TestRunTypeIdField;
            }
            set {
                if ((this.TestRunTypeIdField.Equals(value) != true)) {
                    this.TestRunTypeIdField = value;
                    this.RaisePropertyChanged("TestRunTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> TestSetId {
            get {
                return this.TestSetIdField;
            }
            set {
                if ((this.TestSetIdField.Equals(value) != true)) {
                    this.TestSetIdField = value;
                    this.RaisePropertyChanged("TestSetId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> TestSetTestCaseId {
            get {
                return this.TestSetTestCaseIdField;
            }
            set {
                if ((this.TestSetTestCaseIdField.Equals(value) != true)) {
                    this.TestSetTestCaseIdField = value;
                    this.RaisePropertyChanged("TestSetTestCaseId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> TesterId {
            get {
                return this.TesterIdField;
            }
            set {
                if ((this.TesterIdField.Equals(value) != true)) {
                    this.TesterIdField = value;
                    this.RaisePropertyChanged("TesterId");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RemoteManualTestRun", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.SpiraTest.Web.Services.v3_0.Dat" +
        "aObjects")]
    [System.SerializableAttribute()]
    public partial class RemoteManualTestRun : Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteTestRun {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteTestRunStep[] TestRunStepsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteTestRunStep[] TestRunSteps {
            get {
                return this.TestRunStepsField;
            }
            set {
                if ((object.ReferenceEquals(this.TestRunStepsField, value) != true)) {
                    this.TestRunStepsField = value;
                    this.RaisePropertyChanged("TestRunSteps");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RemoteAutomatedTestRun", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.SpiraTest.Web.Services.v3_0.Dat" +
        "aObjects")]
    [System.SerializableAttribute()]
    public partial class RemoteAutomatedTestRun : Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteTestRun {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AutomationAttachmentIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AutomationEngineIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AutomationEngineTokenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AutomationHostIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteTestSetTestCaseParameter[] ParametersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ProjectIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> RunnerAssertCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RunnerMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RunnerNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RunnerStackTraceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RunnerTestNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ScheduledDateField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AutomationAttachmentId {
            get {
                return this.AutomationAttachmentIdField;
            }
            set {
                if ((this.AutomationAttachmentIdField.Equals(value) != true)) {
                    this.AutomationAttachmentIdField = value;
                    this.RaisePropertyChanged("AutomationAttachmentId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AutomationEngineId {
            get {
                return this.AutomationEngineIdField;
            }
            set {
                if ((this.AutomationEngineIdField.Equals(value) != true)) {
                    this.AutomationEngineIdField = value;
                    this.RaisePropertyChanged("AutomationEngineId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AutomationEngineToken {
            get {
                return this.AutomationEngineTokenField;
            }
            set {
                if ((object.ReferenceEquals(this.AutomationEngineTokenField, value) != true)) {
                    this.AutomationEngineTokenField = value;
                    this.RaisePropertyChanged("AutomationEngineToken");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AutomationHostId {
            get {
                return this.AutomationHostIdField;
            }
            set {
                if ((this.AutomationHostIdField.Equals(value) != true)) {
                    this.AutomationHostIdField = value;
                    this.RaisePropertyChanged("AutomationHostId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteTestSetTestCaseParameter[] Parameters {
            get {
                return this.ParametersField;
            }
            set {
                if ((object.ReferenceEquals(this.ParametersField, value) != true)) {
                    this.ParametersField = value;
                    this.RaisePropertyChanged("Parameters");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ProjectId {
            get {
                return this.ProjectIdField;
            }
            set {
                if ((this.ProjectIdField.Equals(value) != true)) {
                    this.ProjectIdField = value;
                    this.RaisePropertyChanged("ProjectId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> RunnerAssertCount {
            get {
                return this.RunnerAssertCountField;
            }
            set {
                if ((this.RunnerAssertCountField.Equals(value) != true)) {
                    this.RunnerAssertCountField = value;
                    this.RaisePropertyChanged("RunnerAssertCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RunnerMessage {
            get {
                return this.RunnerMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.RunnerMessageField, value) != true)) {
                    this.RunnerMessageField = value;
                    this.RaisePropertyChanged("RunnerMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RunnerName {
            get {
                return this.RunnerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.RunnerNameField, value) != true)) {
                    this.RunnerNameField = value;
                    this.RaisePropertyChanged("RunnerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RunnerStackTrace {
            get {
                return this.RunnerStackTraceField;
            }
            set {
                if ((object.ReferenceEquals(this.RunnerStackTraceField, value) != true)) {
                    this.RunnerStackTraceField = value;
                    this.RaisePropertyChanged("RunnerStackTrace");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RunnerTestName {
            get {
                return this.RunnerTestNameField;
            }
            set {
                if ((object.ReferenceEquals(this.RunnerTestNameField, value) != true)) {
                    this.RunnerTestNameField = value;
                    this.RaisePropertyChanged("RunnerTestName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ScheduledDate {
            get {
                return this.ScheduledDateField;
            }
            set {
                if ((this.ScheduledDateField.Equals(value) != true)) {
                    this.ScheduledDateField = value;
                    this.RaisePropertyChanged("ScheduledDate");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RemoteTestSet", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.SpiraTest.Web.Services.v3_0.Dat" +
        "aObjects")]
    [System.SerializableAttribute()]
    public partial class RemoteTestSet : Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteArtifact {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AutomationHostIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> CountBlockedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> CountCautionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> CountFailedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> CountNotApplicableField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> CountNotRunField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> CountPassedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> CreatorIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatorNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ExecutionDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool FolderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IndentLevelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime LastUpdateDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> OwnerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OwnerNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> PlannedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ProjectIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProjectNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ReleaseIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReleaseVersionNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> TestRunTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> TestSetIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TestSetStatusIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TestSetStatusNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AutomationHostId {
            get {
                return this.AutomationHostIdField;
            }
            set {
                if ((this.AutomationHostIdField.Equals(value) != true)) {
                    this.AutomationHostIdField = value;
                    this.RaisePropertyChanged("AutomationHostId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> CountBlocked {
            get {
                return this.CountBlockedField;
            }
            set {
                if ((this.CountBlockedField.Equals(value) != true)) {
                    this.CountBlockedField = value;
                    this.RaisePropertyChanged("CountBlocked");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> CountCaution {
            get {
                return this.CountCautionField;
            }
            set {
                if ((this.CountCautionField.Equals(value) != true)) {
                    this.CountCautionField = value;
                    this.RaisePropertyChanged("CountCaution");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> CountFailed {
            get {
                return this.CountFailedField;
            }
            set {
                if ((this.CountFailedField.Equals(value) != true)) {
                    this.CountFailedField = value;
                    this.RaisePropertyChanged("CountFailed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> CountNotApplicable {
            get {
                return this.CountNotApplicableField;
            }
            set {
                if ((this.CountNotApplicableField.Equals(value) != true)) {
                    this.CountNotApplicableField = value;
                    this.RaisePropertyChanged("CountNotApplicable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> CountNotRun {
            get {
                return this.CountNotRunField;
            }
            set {
                if ((this.CountNotRunField.Equals(value) != true)) {
                    this.CountNotRunField = value;
                    this.RaisePropertyChanged("CountNotRun");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> CountPassed {
            get {
                return this.CountPassedField;
            }
            set {
                if ((this.CountPassedField.Equals(value) != true)) {
                    this.CountPassedField = value;
                    this.RaisePropertyChanged("CountPassed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreationDate {
            get {
                return this.CreationDateField;
            }
            set {
                if ((this.CreationDateField.Equals(value) != true)) {
                    this.CreationDateField = value;
                    this.RaisePropertyChanged("CreationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> CreatorId {
            get {
                return this.CreatorIdField;
            }
            set {
                if ((this.CreatorIdField.Equals(value) != true)) {
                    this.CreatorIdField = value;
                    this.RaisePropertyChanged("CreatorId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatorName {
            get {
                return this.CreatorNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatorNameField, value) != true)) {
                    this.CreatorNameField = value;
                    this.RaisePropertyChanged("CreatorName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ExecutionDate {
            get {
                return this.ExecutionDateField;
            }
            set {
                if ((this.ExecutionDateField.Equals(value) != true)) {
                    this.ExecutionDateField = value;
                    this.RaisePropertyChanged("ExecutionDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Folder {
            get {
                return this.FolderField;
            }
            set {
                if ((this.FolderField.Equals(value) != true)) {
                    this.FolderField = value;
                    this.RaisePropertyChanged("Folder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IndentLevel {
            get {
                return this.IndentLevelField;
            }
            set {
                if ((object.ReferenceEquals(this.IndentLevelField, value) != true)) {
                    this.IndentLevelField = value;
                    this.RaisePropertyChanged("IndentLevel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LastUpdateDate {
            get {
                return this.LastUpdateDateField;
            }
            set {
                if ((this.LastUpdateDateField.Equals(value) != true)) {
                    this.LastUpdateDateField = value;
                    this.RaisePropertyChanged("LastUpdateDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> OwnerId {
            get {
                return this.OwnerIdField;
            }
            set {
                if ((this.OwnerIdField.Equals(value) != true)) {
                    this.OwnerIdField = value;
                    this.RaisePropertyChanged("OwnerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OwnerName {
            get {
                return this.OwnerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.OwnerNameField, value) != true)) {
                    this.OwnerNameField = value;
                    this.RaisePropertyChanged("OwnerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> PlannedDate {
            get {
                return this.PlannedDateField;
            }
            set {
                if ((this.PlannedDateField.Equals(value) != true)) {
                    this.PlannedDateField = value;
                    this.RaisePropertyChanged("PlannedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ProjectId {
            get {
                return this.ProjectIdField;
            }
            set {
                if ((this.ProjectIdField.Equals(value) != true)) {
                    this.ProjectIdField = value;
                    this.RaisePropertyChanged("ProjectId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProjectName {
            get {
                return this.ProjectNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ProjectNameField, value) != true)) {
                    this.ProjectNameField = value;
                    this.RaisePropertyChanged("ProjectName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ReleaseId {
            get {
                return this.ReleaseIdField;
            }
            set {
                if ((this.ReleaseIdField.Equals(value) != true)) {
                    this.ReleaseIdField = value;
                    this.RaisePropertyChanged("ReleaseId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReleaseVersionNumber {
            get {
                return this.ReleaseVersionNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.ReleaseVersionNumberField, value) != true)) {
                    this.ReleaseVersionNumberField = value;
                    this.RaisePropertyChanged("ReleaseVersionNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> TestRunTypeId {
            get {
                return this.TestRunTypeIdField;
            }
            set {
                if ((this.TestRunTypeIdField.Equals(value) != true)) {
                    this.TestRunTypeIdField = value;
                    this.RaisePropertyChanged("TestRunTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> TestSetId {
            get {
                return this.TestSetIdField;
            }
            set {
                if ((this.TestSetIdField.Equals(value) != true)) {
                    this.TestSetIdField = value;
                    this.RaisePropertyChanged("TestSetId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TestSetStatusId {
            get {
                return this.TestSetStatusIdField;
            }
            set {
                if ((this.TestSetStatusIdField.Equals(value) != true)) {
                    this.TestSetStatusIdField = value;
                    this.RaisePropertyChanged("TestSetStatusId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TestSetStatusName {
            get {
                return this.TestSetStatusNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TestSetStatusNameField, value) != true)) {
                    this.TestSetStatusNameField = value;
                    this.RaisePropertyChanged("TestSetStatusName");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RemoteIncident", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.SpiraTest.Web.Services.v3_0.Dat" +
        "aObjects")]
    [System.SerializableAttribute()]
    public partial class RemoteIncident : Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteArtifact {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ActualEffortField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ClosedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CompletionPercentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> CreationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> DetectedReleaseIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DetectedReleaseVersionNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> EstimatedEffortField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> IncidentIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> IncidentStatusIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IncidentStatusNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IncidentStatusOpenStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> IncidentTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IncidentTypeNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime LastUpdateDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> OpenerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OpenerNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> OwnerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OwnerNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> PriorityIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PriorityNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ProjectIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProjectNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ProjectedEffortField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> RemainingEffortField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ResolvedReleaseIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ResolvedReleaseVersionNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> SeverityIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SeverityNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> StartDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> TestRunStepIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> VerifiedReleaseIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VerifiedReleaseVersionNumberField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ActualEffort {
            get {
                return this.ActualEffortField;
            }
            set {
                if ((this.ActualEffortField.Equals(value) != true)) {
                    this.ActualEffortField = value;
                    this.RaisePropertyChanged("ActualEffort");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ClosedDate {
            get {
                return this.ClosedDateField;
            }
            set {
                if ((this.ClosedDateField.Equals(value) != true)) {
                    this.ClosedDateField = value;
                    this.RaisePropertyChanged("ClosedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CompletionPercent {
            get {
                return this.CompletionPercentField;
            }
            set {
                if ((this.CompletionPercentField.Equals(value) != true)) {
                    this.CompletionPercentField = value;
                    this.RaisePropertyChanged("CompletionPercent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CreationDate {
            get {
                return this.CreationDateField;
            }
            set {
                if ((this.CreationDateField.Equals(value) != true)) {
                    this.CreationDateField = value;
                    this.RaisePropertyChanged("CreationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> DetectedReleaseId {
            get {
                return this.DetectedReleaseIdField;
            }
            set {
                if ((this.DetectedReleaseIdField.Equals(value) != true)) {
                    this.DetectedReleaseIdField = value;
                    this.RaisePropertyChanged("DetectedReleaseId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DetectedReleaseVersionNumber {
            get {
                return this.DetectedReleaseVersionNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.DetectedReleaseVersionNumberField, value) != true)) {
                    this.DetectedReleaseVersionNumberField = value;
                    this.RaisePropertyChanged("DetectedReleaseVersionNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> EstimatedEffort {
            get {
                return this.EstimatedEffortField;
            }
            set {
                if ((this.EstimatedEffortField.Equals(value) != true)) {
                    this.EstimatedEffortField = value;
                    this.RaisePropertyChanged("EstimatedEffort");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> IncidentId {
            get {
                return this.IncidentIdField;
            }
            set {
                if ((this.IncidentIdField.Equals(value) != true)) {
                    this.IncidentIdField = value;
                    this.RaisePropertyChanged("IncidentId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> IncidentStatusId {
            get {
                return this.IncidentStatusIdField;
            }
            set {
                if ((this.IncidentStatusIdField.Equals(value) != true)) {
                    this.IncidentStatusIdField = value;
                    this.RaisePropertyChanged("IncidentStatusId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IncidentStatusName {
            get {
                return this.IncidentStatusNameField;
            }
            set {
                if ((object.ReferenceEquals(this.IncidentStatusNameField, value) != true)) {
                    this.IncidentStatusNameField = value;
                    this.RaisePropertyChanged("IncidentStatusName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IncidentStatusOpenStatus {
            get {
                return this.IncidentStatusOpenStatusField;
            }
            set {
                if ((this.IncidentStatusOpenStatusField.Equals(value) != true)) {
                    this.IncidentStatusOpenStatusField = value;
                    this.RaisePropertyChanged("IncidentStatusOpenStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> IncidentTypeId {
            get {
                return this.IncidentTypeIdField;
            }
            set {
                if ((this.IncidentTypeIdField.Equals(value) != true)) {
                    this.IncidentTypeIdField = value;
                    this.RaisePropertyChanged("IncidentTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IncidentTypeName {
            get {
                return this.IncidentTypeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.IncidentTypeNameField, value) != true)) {
                    this.IncidentTypeNameField = value;
                    this.RaisePropertyChanged("IncidentTypeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LastUpdateDate {
            get {
                return this.LastUpdateDateField;
            }
            set {
                if ((this.LastUpdateDateField.Equals(value) != true)) {
                    this.LastUpdateDateField = value;
                    this.RaisePropertyChanged("LastUpdateDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> OpenerId {
            get {
                return this.OpenerIdField;
            }
            set {
                if ((this.OpenerIdField.Equals(value) != true)) {
                    this.OpenerIdField = value;
                    this.RaisePropertyChanged("OpenerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OpenerName {
            get {
                return this.OpenerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.OpenerNameField, value) != true)) {
                    this.OpenerNameField = value;
                    this.RaisePropertyChanged("OpenerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> OwnerId {
            get {
                return this.OwnerIdField;
            }
            set {
                if ((this.OwnerIdField.Equals(value) != true)) {
                    this.OwnerIdField = value;
                    this.RaisePropertyChanged("OwnerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OwnerName {
            get {
                return this.OwnerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.OwnerNameField, value) != true)) {
                    this.OwnerNameField = value;
                    this.RaisePropertyChanged("OwnerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> PriorityId {
            get {
                return this.PriorityIdField;
            }
            set {
                if ((this.PriorityIdField.Equals(value) != true)) {
                    this.PriorityIdField = value;
                    this.RaisePropertyChanged("PriorityId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PriorityName {
            get {
                return this.PriorityNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PriorityNameField, value) != true)) {
                    this.PriorityNameField = value;
                    this.RaisePropertyChanged("PriorityName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ProjectId {
            get {
                return this.ProjectIdField;
            }
            set {
                if ((this.ProjectIdField.Equals(value) != true)) {
                    this.ProjectIdField = value;
                    this.RaisePropertyChanged("ProjectId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProjectName {
            get {
                return this.ProjectNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ProjectNameField, value) != true)) {
                    this.ProjectNameField = value;
                    this.RaisePropertyChanged("ProjectName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ProjectedEffort {
            get {
                return this.ProjectedEffortField;
            }
            set {
                if ((this.ProjectedEffortField.Equals(value) != true)) {
                    this.ProjectedEffortField = value;
                    this.RaisePropertyChanged("ProjectedEffort");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> RemainingEffort {
            get {
                return this.RemainingEffortField;
            }
            set {
                if ((this.RemainingEffortField.Equals(value) != true)) {
                    this.RemainingEffortField = value;
                    this.RaisePropertyChanged("RemainingEffort");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ResolvedReleaseId {
            get {
                return this.ResolvedReleaseIdField;
            }
            set {
                if ((this.ResolvedReleaseIdField.Equals(value) != true)) {
                    this.ResolvedReleaseIdField = value;
                    this.RaisePropertyChanged("ResolvedReleaseId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ResolvedReleaseVersionNumber {
            get {
                return this.ResolvedReleaseVersionNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.ResolvedReleaseVersionNumberField, value) != true)) {
                    this.ResolvedReleaseVersionNumberField = value;
                    this.RaisePropertyChanged("ResolvedReleaseVersionNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> SeverityId {
            get {
                return this.SeverityIdField;
            }
            set {
                if ((this.SeverityIdField.Equals(value) != true)) {
                    this.SeverityIdField = value;
                    this.RaisePropertyChanged("SeverityId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SeverityName {
            get {
                return this.SeverityNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SeverityNameField, value) != true)) {
                    this.SeverityNameField = value;
                    this.RaisePropertyChanged("SeverityName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> StartDate {
            get {
                return this.StartDateField;
            }
            set {
                if ((this.StartDateField.Equals(value) != true)) {
                    this.StartDateField = value;
                    this.RaisePropertyChanged("StartDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> TestRunStepId {
            get {
                return this.TestRunStepIdField;
            }
            set {
                if ((this.TestRunStepIdField.Equals(value) != true)) {
                    this.TestRunStepIdField = value;
                    this.RaisePropertyChanged("TestRunStepId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> VerifiedReleaseId {
            get {
                return this.VerifiedReleaseIdField;
            }
            set {
                if ((this.VerifiedReleaseIdField.Equals(value) != true)) {
                    this.VerifiedReleaseIdField = value;
                    this.RaisePropertyChanged("VerifiedReleaseId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VerifiedReleaseVersionNumber {
            get {
                return this.VerifiedReleaseVersionNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.VerifiedReleaseVersionNumberField, value) != true)) {
                    this.VerifiedReleaseVersionNumberField = value;
                    this.RaisePropertyChanged("VerifiedReleaseVersionNumber");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RemoteRelease", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.SpiraTest.Web.Services.v3_0.Dat" +
        "aObjects")]
    [System.SerializableAttribute()]
    public partial class RemoteRelease : Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteArtifact {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AvailableEffortField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> CreatorIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatorNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DaysNonWorkingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime EndDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FullNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IndentLevelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IterationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime LastUpdateDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> PlannedEffortField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ProjectIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ReleaseIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ResourceCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime StartDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SummaryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> TaskActualEffortField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> TaskCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> TaskEstimatedEffortField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VersionNumberField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Active {
            get {
                return this.ActiveField;
            }
            set {
                if ((this.ActiveField.Equals(value) != true)) {
                    this.ActiveField = value;
                    this.RaisePropertyChanged("Active");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AvailableEffort {
            get {
                return this.AvailableEffortField;
            }
            set {
                if ((this.AvailableEffortField.Equals(value) != true)) {
                    this.AvailableEffortField = value;
                    this.RaisePropertyChanged("AvailableEffort");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreationDate {
            get {
                return this.CreationDateField;
            }
            set {
                if ((this.CreationDateField.Equals(value) != true)) {
                    this.CreationDateField = value;
                    this.RaisePropertyChanged("CreationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> CreatorId {
            get {
                return this.CreatorIdField;
            }
            set {
                if ((this.CreatorIdField.Equals(value) != true)) {
                    this.CreatorIdField = value;
                    this.RaisePropertyChanged("CreatorId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatorName {
            get {
                return this.CreatorNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatorNameField, value) != true)) {
                    this.CreatorNameField = value;
                    this.RaisePropertyChanged("CreatorName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DaysNonWorking {
            get {
                return this.DaysNonWorkingField;
            }
            set {
                if ((this.DaysNonWorkingField.Equals(value) != true)) {
                    this.DaysNonWorkingField = value;
                    this.RaisePropertyChanged("DaysNonWorking");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EndDate {
            get {
                return this.EndDateField;
            }
            set {
                if ((this.EndDateField.Equals(value) != true)) {
                    this.EndDateField = value;
                    this.RaisePropertyChanged("EndDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FullName {
            get {
                return this.FullNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FullNameField, value) != true)) {
                    this.FullNameField = value;
                    this.RaisePropertyChanged("FullName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IndentLevel {
            get {
                return this.IndentLevelField;
            }
            set {
                if ((object.ReferenceEquals(this.IndentLevelField, value) != true)) {
                    this.IndentLevelField = value;
                    this.RaisePropertyChanged("IndentLevel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Iteration {
            get {
                return this.IterationField;
            }
            set {
                if ((this.IterationField.Equals(value) != true)) {
                    this.IterationField = value;
                    this.RaisePropertyChanged("Iteration");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LastUpdateDate {
            get {
                return this.LastUpdateDateField;
            }
            set {
                if ((this.LastUpdateDateField.Equals(value) != true)) {
                    this.LastUpdateDateField = value;
                    this.RaisePropertyChanged("LastUpdateDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> PlannedEffort {
            get {
                return this.PlannedEffortField;
            }
            set {
                if ((this.PlannedEffortField.Equals(value) != true)) {
                    this.PlannedEffortField = value;
                    this.RaisePropertyChanged("PlannedEffort");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ProjectId {
            get {
                return this.ProjectIdField;
            }
            set {
                if ((this.ProjectIdField.Equals(value) != true)) {
                    this.ProjectIdField = value;
                    this.RaisePropertyChanged("ProjectId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ReleaseId {
            get {
                return this.ReleaseIdField;
            }
            set {
                if ((this.ReleaseIdField.Equals(value) != true)) {
                    this.ReleaseIdField = value;
                    this.RaisePropertyChanged("ReleaseId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ResourceCount {
            get {
                return this.ResourceCountField;
            }
            set {
                if ((this.ResourceCountField.Equals(value) != true)) {
                    this.ResourceCountField = value;
                    this.RaisePropertyChanged("ResourceCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime StartDate {
            get {
                return this.StartDateField;
            }
            set {
                if ((this.StartDateField.Equals(value) != true)) {
                    this.StartDateField = value;
                    this.RaisePropertyChanged("StartDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Summary {
            get {
                return this.SummaryField;
            }
            set {
                if ((this.SummaryField.Equals(value) != true)) {
                    this.SummaryField = value;
                    this.RaisePropertyChanged("Summary");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> TaskActualEffort {
            get {
                return this.TaskActualEffortField;
            }
            set {
                if ((this.TaskActualEffortField.Equals(value) != true)) {
                    this.TaskActualEffortField = value;
                    this.RaisePropertyChanged("TaskActualEffort");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> TaskCount {
            get {
                return this.TaskCountField;
            }
            set {
                if ((this.TaskCountField.Equals(value) != true)) {
                    this.TaskCountField = value;
                    this.RaisePropertyChanged("TaskCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> TaskEstimatedEffort {
            get {
                return this.TaskEstimatedEffortField;
            }
            set {
                if ((this.TaskEstimatedEffortField.Equals(value) != true)) {
                    this.TaskEstimatedEffortField = value;
                    this.RaisePropertyChanged("TaskEstimatedEffort");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VersionNumber {
            get {
                return this.VersionNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.VersionNumberField, value) != true)) {
                    this.VersionNumberField = value;
                    this.RaisePropertyChanged("VersionNumber");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RemoteRequirement", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.SpiraTest.Web.Services.v3_0.Dat" +
        "aObjects")]
    [System.SerializableAttribute()]
    public partial class RemoteRequirement : Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteArtifact {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AuthorIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AuthorNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> CoverageCountBlockedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> CoverageCountCautionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> CoverageCountFailedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> CoverageCountPassedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> CoverageCountTotalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ImportanceIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ImportanceNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IndentLevelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime LastUpdateDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> OwnerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OwnerNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> PlannedEffortField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ProjectIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProjectNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ReleaseIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReleaseVersionNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> RequirementIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> StatusIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SummaryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> TaskActualEffortField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> TaskCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> TaskEstimatedEffortField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AuthorId {
            get {
                return this.AuthorIdField;
            }
            set {
                if ((this.AuthorIdField.Equals(value) != true)) {
                    this.AuthorIdField = value;
                    this.RaisePropertyChanged("AuthorId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AuthorName {
            get {
                return this.AuthorNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AuthorNameField, value) != true)) {
                    this.AuthorNameField = value;
                    this.RaisePropertyChanged("AuthorName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> CoverageCountBlocked {
            get {
                return this.CoverageCountBlockedField;
            }
            set {
                if ((this.CoverageCountBlockedField.Equals(value) != true)) {
                    this.CoverageCountBlockedField = value;
                    this.RaisePropertyChanged("CoverageCountBlocked");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> CoverageCountCaution {
            get {
                return this.CoverageCountCautionField;
            }
            set {
                if ((this.CoverageCountCautionField.Equals(value) != true)) {
                    this.CoverageCountCautionField = value;
                    this.RaisePropertyChanged("CoverageCountCaution");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> CoverageCountFailed {
            get {
                return this.CoverageCountFailedField;
            }
            set {
                if ((this.CoverageCountFailedField.Equals(value) != true)) {
                    this.CoverageCountFailedField = value;
                    this.RaisePropertyChanged("CoverageCountFailed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> CoverageCountPassed {
            get {
                return this.CoverageCountPassedField;
            }
            set {
                if ((this.CoverageCountPassedField.Equals(value) != true)) {
                    this.CoverageCountPassedField = value;
                    this.RaisePropertyChanged("CoverageCountPassed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> CoverageCountTotal {
            get {
                return this.CoverageCountTotalField;
            }
            set {
                if ((this.CoverageCountTotalField.Equals(value) != true)) {
                    this.CoverageCountTotalField = value;
                    this.RaisePropertyChanged("CoverageCountTotal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreationDate {
            get {
                return this.CreationDateField;
            }
            set {
                if ((this.CreationDateField.Equals(value) != true)) {
                    this.CreationDateField = value;
                    this.RaisePropertyChanged("CreationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ImportanceId {
            get {
                return this.ImportanceIdField;
            }
            set {
                if ((this.ImportanceIdField.Equals(value) != true)) {
                    this.ImportanceIdField = value;
                    this.RaisePropertyChanged("ImportanceId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ImportanceName {
            get {
                return this.ImportanceNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ImportanceNameField, value) != true)) {
                    this.ImportanceNameField = value;
                    this.RaisePropertyChanged("ImportanceName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IndentLevel {
            get {
                return this.IndentLevelField;
            }
            set {
                if ((object.ReferenceEquals(this.IndentLevelField, value) != true)) {
                    this.IndentLevelField = value;
                    this.RaisePropertyChanged("IndentLevel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LastUpdateDate {
            get {
                return this.LastUpdateDateField;
            }
            set {
                if ((this.LastUpdateDateField.Equals(value) != true)) {
                    this.LastUpdateDateField = value;
                    this.RaisePropertyChanged("LastUpdateDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> OwnerId {
            get {
                return this.OwnerIdField;
            }
            set {
                if ((this.OwnerIdField.Equals(value) != true)) {
                    this.OwnerIdField = value;
                    this.RaisePropertyChanged("OwnerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OwnerName {
            get {
                return this.OwnerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.OwnerNameField, value) != true)) {
                    this.OwnerNameField = value;
                    this.RaisePropertyChanged("OwnerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> PlannedEffort {
            get {
                return this.PlannedEffortField;
            }
            set {
                if ((this.PlannedEffortField.Equals(value) != true)) {
                    this.PlannedEffortField = value;
                    this.RaisePropertyChanged("PlannedEffort");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ProjectId {
            get {
                return this.ProjectIdField;
            }
            set {
                if ((this.ProjectIdField.Equals(value) != true)) {
                    this.ProjectIdField = value;
                    this.RaisePropertyChanged("ProjectId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProjectName {
            get {
                return this.ProjectNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ProjectNameField, value) != true)) {
                    this.ProjectNameField = value;
                    this.RaisePropertyChanged("ProjectName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ReleaseId {
            get {
                return this.ReleaseIdField;
            }
            set {
                if ((this.ReleaseIdField.Equals(value) != true)) {
                    this.ReleaseIdField = value;
                    this.RaisePropertyChanged("ReleaseId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReleaseVersionNumber {
            get {
                return this.ReleaseVersionNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.ReleaseVersionNumberField, value) != true)) {
                    this.ReleaseVersionNumberField = value;
                    this.RaisePropertyChanged("ReleaseVersionNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> RequirementId {
            get {
                return this.RequirementIdField;
            }
            set {
                if ((this.RequirementIdField.Equals(value) != true)) {
                    this.RequirementIdField = value;
                    this.RaisePropertyChanged("RequirementId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> StatusId {
            get {
                return this.StatusIdField;
            }
            set {
                if ((this.StatusIdField.Equals(value) != true)) {
                    this.StatusIdField = value;
                    this.RaisePropertyChanged("StatusId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StatusName {
            get {
                return this.StatusNameField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusNameField, value) != true)) {
                    this.StatusNameField = value;
                    this.RaisePropertyChanged("StatusName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Summary {
            get {
                return this.SummaryField;
            }
            set {
                if ((this.SummaryField.Equals(value) != true)) {
                    this.SummaryField = value;
                    this.RaisePropertyChanged("Summary");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> TaskActualEffort {
            get {
                return this.TaskActualEffortField;
            }
            set {
                if ((this.TaskActualEffortField.Equals(value) != true)) {
                    this.TaskActualEffortField = value;
                    this.RaisePropertyChanged("TaskActualEffort");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> TaskCount {
            get {
                return this.TaskCountField;
            }
            set {
                if ((this.TaskCountField.Equals(value) != true)) {
                    this.TaskCountField = value;
                    this.RaisePropertyChanged("TaskCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> TaskEstimatedEffort {
            get {
                return this.TaskEstimatedEffortField;
            }
            set {
                if ((this.TaskEstimatedEffortField.Equals(value) != true)) {
                    this.TaskEstimatedEffortField = value;
                    this.RaisePropertyChanged("TaskEstimatedEffort");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RemoteTestRunStep", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.SpiraTest.Web.Services.v3_0.Dat" +
        "aObjects")]
    [System.SerializableAttribute()]
    public partial class RemoteTestRunStep : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ActualResultField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ExecutionStatusIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExpectedResultField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PositionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SampleDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> TestCaseIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TestRunIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> TestRunStepIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> TestStepIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ActualResult {
            get {
                return this.ActualResultField;
            }
            set {
                if ((object.ReferenceEquals(this.ActualResultField, value) != true)) {
                    this.ActualResultField = value;
                    this.RaisePropertyChanged("ActualResult");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ExecutionStatusId {
            get {
                return this.ExecutionStatusIdField;
            }
            set {
                if ((this.ExecutionStatusIdField.Equals(value) != true)) {
                    this.ExecutionStatusIdField = value;
                    this.RaisePropertyChanged("ExecutionStatusId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExpectedResult {
            get {
                return this.ExpectedResultField;
            }
            set {
                if ((object.ReferenceEquals(this.ExpectedResultField, value) != true)) {
                    this.ExpectedResultField = value;
                    this.RaisePropertyChanged("ExpectedResult");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Position {
            get {
                return this.PositionField;
            }
            set {
                if ((this.PositionField.Equals(value) != true)) {
                    this.PositionField = value;
                    this.RaisePropertyChanged("Position");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SampleData {
            get {
                return this.SampleDataField;
            }
            set {
                if ((object.ReferenceEquals(this.SampleDataField, value) != true)) {
                    this.SampleDataField = value;
                    this.RaisePropertyChanged("SampleData");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> TestCaseId {
            get {
                return this.TestCaseIdField;
            }
            set {
                if ((this.TestCaseIdField.Equals(value) != true)) {
                    this.TestCaseIdField = value;
                    this.RaisePropertyChanged("TestCaseId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TestRunId {
            get {
                return this.TestRunIdField;
            }
            set {
                if ((this.TestRunIdField.Equals(value) != true)) {
                    this.TestRunIdField = value;
                    this.RaisePropertyChanged("TestRunId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> TestRunStepId {
            get {
                return this.TestRunStepIdField;
            }
            set {
                if ((this.TestRunStepIdField.Equals(value) != true)) {
                    this.TestRunStepIdField = value;
                    this.RaisePropertyChanged("TestRunStepId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> TestStepId {
            get {
                return this.TestStepIdField;
            }
            set {
                if ((this.TestStepIdField.Equals(value) != true)) {
                    this.TestStepIdField = value;
                    this.RaisePropertyChanged("TestStepId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RemoteTestSetTestCaseParameter", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.SpiraTest.Web.Services.v3_0.Dat" +
        "aObjects")]
    [System.SerializableAttribute()]
    public partial class RemoteTestSetTestCaseParameter : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RemoteAutomationEngine", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.SpiraTest.Web.Services.v3_0.Dat" +
        "aObjects")]
    [System.SerializableAttribute()]
    public partial class RemoteAutomationEngine : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AutomationEngineIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TokenField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Active {
            get {
                return this.ActiveField;
            }
            set {
                if ((this.ActiveField.Equals(value) != true)) {
                    this.ActiveField = value;
                    this.RaisePropertyChanged("Active");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AutomationEngineId {
            get {
                return this.AutomationEngineIdField;
            }
            set {
                if ((this.AutomationEngineIdField.Equals(value) != true)) {
                    this.AutomationEngineIdField = value;
                    this.RaisePropertyChanged("AutomationEngineId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Token {
            get {
                return this.TokenField;
            }
            set {
                if ((object.ReferenceEquals(this.TokenField, value) != true)) {
                    this.TokenField = value;
                    this.RaisePropertyChanged("Token");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RemoteTestCaseParameter", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.SpiraTest.Web.Services.v3_0.Dat" +
        "aObjects")]
    [System.SerializableAttribute()]
    public partial class RemoteTestCaseParameter : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DefaultValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TestCaseIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> TestCaseParameterIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DefaultValue {
            get {
                return this.DefaultValueField;
            }
            set {
                if ((object.ReferenceEquals(this.DefaultValueField, value) != true)) {
                    this.DefaultValueField = value;
                    this.RaisePropertyChanged("DefaultValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TestCaseId {
            get {
                return this.TestCaseIdField;
            }
            set {
                if ((this.TestCaseIdField.Equals(value) != true)) {
                    this.TestCaseIdField = value;
                    this.RaisePropertyChanged("TestCaseId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> TestCaseParameterId {
            get {
                return this.TestCaseParameterIdField;
            }
            set {
                if ((this.TestCaseParameterIdField.Equals(value) != true)) {
                    this.TestCaseParameterIdField = value;
                    this.RaisePropertyChanged("TestCaseParameterId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RemoteTestSetTestCaseMapping", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.SpiraTest.Web.Services.v3_0.Dat" +
        "aObjects")]
    [System.SerializableAttribute()]
    public partial class RemoteTestSetTestCaseMapping : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> OwnerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TestCaseIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TestSetIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TestSetTestCaseIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> OwnerId {
            get {
                return this.OwnerIdField;
            }
            set {
                if ((this.OwnerIdField.Equals(value) != true)) {
                    this.OwnerIdField = value;
                    this.RaisePropertyChanged("OwnerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TestCaseId {
            get {
                return this.TestCaseIdField;
            }
            set {
                if ((this.TestCaseIdField.Equals(value) != true)) {
                    this.TestCaseIdField = value;
                    this.RaisePropertyChanged("TestCaseId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TestSetId {
            get {
                return this.TestSetIdField;
            }
            set {
                if ((this.TestSetIdField.Equals(value) != true)) {
                    this.TestSetIdField = value;
                    this.RaisePropertyChanged("TestSetId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TestSetTestCaseId {
            get {
                return this.TestSetTestCaseIdField;
            }
            set {
                if ((this.TestSetTestCaseIdField.Equals(value) != true)) {
                    this.TestSetTestCaseIdField = value;
                    this.RaisePropertyChanged("TestSetTestCaseId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RemoteTestStepParameter", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.SpiraTest.Web.Services.v3_0.Dat" +
        "aObjects")]
    [System.SerializableAttribute()]
    public partial class RemoteTestStepParameter : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RemoteIncidentStatus", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.SpiraTest.Web.Services.v3_0.Dat" +
        "aObjects")]
    [System.SerializableAttribute()]
    public partial class RemoteIncidentStatus : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> IncidentStatusIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool OpenField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Active {
            get {
                return this.ActiveField;
            }
            set {
                if ((this.ActiveField.Equals(value) != true)) {
                    this.ActiveField = value;
                    this.RaisePropertyChanged("Active");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> IncidentStatusId {
            get {
                return this.IncidentStatusIdField;
            }
            set {
                if ((this.IncidentStatusIdField.Equals(value) != true)) {
                    this.IncidentStatusIdField = value;
                    this.RaisePropertyChanged("IncidentStatusId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Open {
            get {
                return this.OpenField;
            }
            set {
                if ((this.OpenField.Equals(value) != true)) {
                    this.OpenField = value;
                    this.RaisePropertyChanged("Open");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RemoteIncidentType", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.SpiraTest.Web.Services.v3_0.Dat" +
        "aObjects")]
    [System.SerializableAttribute()]
    public partial class RemoteIncidentType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> IncidentTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IssueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool RiskField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int WorkflowIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Active {
            get {
                return this.ActiveField;
            }
            set {
                if ((this.ActiveField.Equals(value) != true)) {
                    this.ActiveField = value;
                    this.RaisePropertyChanged("Active");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> IncidentTypeId {
            get {
                return this.IncidentTypeIdField;
            }
            set {
                if ((this.IncidentTypeIdField.Equals(value) != true)) {
                    this.IncidentTypeIdField = value;
                    this.RaisePropertyChanged("IncidentTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Issue {
            get {
                return this.IssueField;
            }
            set {
                if ((this.IssueField.Equals(value) != true)) {
                    this.IssueField = value;
                    this.RaisePropertyChanged("Issue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Risk {
            get {
                return this.RiskField;
            }
            set {
                if ((this.RiskField.Equals(value) != true)) {
                    this.RiskField = value;
                    this.RaisePropertyChanged("Risk");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int WorkflowId {
            get {
                return this.WorkflowIdField;
            }
            set {
                if ((this.WorkflowIdField.Equals(value) != true)) {
                    this.WorkflowIdField = value;
                    this.RaisePropertyChanged("WorkflowId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RemoteWorkflowIncidentFields", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.SpiraTest.Web.Services.v3_0.Dat" +
        "aObjects")]
    [System.SerializableAttribute()]
    public partial class RemoteWorkflowIncidentFields : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FieldCaptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FieldIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FieldNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FieldStateIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FieldCaption {
            get {
                return this.FieldCaptionField;
            }
            set {
                if ((object.ReferenceEquals(this.FieldCaptionField, value) != true)) {
                    this.FieldCaptionField = value;
                    this.RaisePropertyChanged("FieldCaption");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FieldId {
            get {
                return this.FieldIdField;
            }
            set {
                if ((this.FieldIdField.Equals(value) != true)) {
                    this.FieldIdField = value;
                    this.RaisePropertyChanged("FieldId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FieldName {
            get {
                return this.FieldNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FieldNameField, value) != true)) {
                    this.FieldNameField = value;
                    this.RaisePropertyChanged("FieldName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FieldStateId {
            get {
                return this.FieldStateIdField;
            }
            set {
                if ((this.FieldStateIdField.Equals(value) != true)) {
                    this.FieldStateIdField = value;
                    this.RaisePropertyChanged("FieldStateId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RemoteWorkflowIncidentTransition", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.SpiraTest.Web.Services.v3_0.Dat" +
        "aObjects")]
    [System.SerializableAttribute()]
    public partial class RemoteWorkflowIncidentTransition : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ExecuteByDetectorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ExecuteByOwnerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IncidentStatusId_InputField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IncidentStatusId_OutputField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IncidentStatusName_InputField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IncidentStatusName_OutputField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TransitionIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int WorkflowIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ExecuteByDetector {
            get {
                return this.ExecuteByDetectorField;
            }
            set {
                if ((this.ExecuteByDetectorField.Equals(value) != true)) {
                    this.ExecuteByDetectorField = value;
                    this.RaisePropertyChanged("ExecuteByDetector");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ExecuteByOwner {
            get {
                return this.ExecuteByOwnerField;
            }
            set {
                if ((this.ExecuteByOwnerField.Equals(value) != true)) {
                    this.ExecuteByOwnerField = value;
                    this.RaisePropertyChanged("ExecuteByOwner");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IncidentStatusId_Input {
            get {
                return this.IncidentStatusId_InputField;
            }
            set {
                if ((this.IncidentStatusId_InputField.Equals(value) != true)) {
                    this.IncidentStatusId_InputField = value;
                    this.RaisePropertyChanged("IncidentStatusId_Input");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IncidentStatusId_Output {
            get {
                return this.IncidentStatusId_OutputField;
            }
            set {
                if ((this.IncidentStatusId_OutputField.Equals(value) != true)) {
                    this.IncidentStatusId_OutputField = value;
                    this.RaisePropertyChanged("IncidentStatusId_Output");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IncidentStatusName_Input {
            get {
                return this.IncidentStatusName_InputField;
            }
            set {
                if ((object.ReferenceEquals(this.IncidentStatusName_InputField, value) != true)) {
                    this.IncidentStatusName_InputField = value;
                    this.RaisePropertyChanged("IncidentStatusName_Input");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IncidentStatusName_Output {
            get {
                return this.IncidentStatusName_OutputField;
            }
            set {
                if ((object.ReferenceEquals(this.IncidentStatusName_OutputField, value) != true)) {
                    this.IncidentStatusName_OutputField = value;
                    this.RaisePropertyChanged("IncidentStatusName_Output");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TransitionId {
            get {
                return this.TransitionIdField;
            }
            set {
                if ((this.TransitionIdField.Equals(value) != true)) {
                    this.TransitionIdField = value;
                    this.RaisePropertyChanged("TransitionId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int WorkflowId {
            get {
                return this.WorkflowIdField;
            }
            set {
                if ((this.WorkflowIdField.Equals(value) != true)) {
                    this.WorkflowIdField = value;
                    this.RaisePropertyChanged("WorkflowId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RemoteWorkflowIncidentCustomProperties", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.SpiraTest.Web.Services.v3_0.Dat" +
        "aObjects")]
    [System.SerializableAttribute()]
    public partial class RemoteWorkflowIncidentCustomProperties : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CustomPropertyIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FieldNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FieldStateIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CustomPropertyId {
            get {
                return this.CustomPropertyIdField;
            }
            set {
                if ((this.CustomPropertyIdField.Equals(value) != true)) {
                    this.CustomPropertyIdField = value;
                    this.RaisePropertyChanged("CustomPropertyId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FieldName {
            get {
                return this.FieldNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FieldNameField, value) != true)) {
                    this.FieldNameField = value;
                    this.RaisePropertyChanged("FieldName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FieldStateId {
            get {
                return this.FieldStateIdField;
            }
            set {
                if ((this.FieldStateIdField.Equals(value) != true)) {
                    this.FieldStateIdField = value;
                    this.RaisePropertyChanged("FieldStateId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RemoteCustomList", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.SpiraTest.Web.Services.v3_0.Dat" +
        "aObjects")]
    [System.SerializableAttribute()]
    public partial class RemoteCustomList : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> CustomPropertyListIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ProjectIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteCustomListValue[] ValuesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Active {
            get {
                return this.ActiveField;
            }
            set {
                if ((this.ActiveField.Equals(value) != true)) {
                    this.ActiveField = value;
                    this.RaisePropertyChanged("Active");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> CustomPropertyListId {
            get {
                return this.CustomPropertyListIdField;
            }
            set {
                if ((this.CustomPropertyListIdField.Equals(value) != true)) {
                    this.CustomPropertyListIdField = value;
                    this.RaisePropertyChanged("CustomPropertyListId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ProjectId {
            get {
                return this.ProjectIdField;
            }
            set {
                if ((this.ProjectIdField.Equals(value) != true)) {
                    this.ProjectIdField = value;
                    this.RaisePropertyChanged("ProjectId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteCustomListValue[] Values {
            get {
                return this.ValuesField;
            }
            set {
                if ((object.ReferenceEquals(this.ValuesField, value) != true)) {
                    this.ValuesField = value;
                    this.RaisePropertyChanged("Values");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RemoteCustomListValue", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.SpiraTest.Web.Services.v3_0.Dat" +
        "aObjects")]
    [System.SerializableAttribute()]
    public partial class RemoteCustomListValue : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CustomPropertyListIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> CustomPropertyValueIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Active {
            get {
                return this.ActiveField;
            }
            set {
                if ((this.ActiveField.Equals(value) != true)) {
                    this.ActiveField = value;
                    this.RaisePropertyChanged("Active");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CustomPropertyListId {
            get {
                return this.CustomPropertyListIdField;
            }
            set {
                if ((this.CustomPropertyListIdField.Equals(value) != true)) {
                    this.CustomPropertyListIdField = value;
                    this.RaisePropertyChanged("CustomPropertyListId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> CustomPropertyValueId {
            get {
                return this.CustomPropertyValueIdField;
            }
            set {
                if ((this.CustomPropertyValueIdField.Equals(value) != true)) {
                    this.CustomPropertyValueIdField = value;
                    this.RaisePropertyChanged("CustomPropertyValueId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RemoteProject", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.SpiraTest.Web.Services.v3_0.Dat" +
        "aObjects")]
    [System.SerializableAttribute()]
    public partial class RemoteProject : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NonWorkingHoursField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ProjectIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WebsiteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int WorkingDaysField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int WorkingHoursField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Active {
            get {
                return this.ActiveField;
            }
            set {
                if ((this.ActiveField.Equals(value) != true)) {
                    this.ActiveField = value;
                    this.RaisePropertyChanged("Active");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreationDate {
            get {
                return this.CreationDateField;
            }
            set {
                if ((this.CreationDateField.Equals(value) != true)) {
                    this.CreationDateField = value;
                    this.RaisePropertyChanged("CreationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NonWorkingHours {
            get {
                return this.NonWorkingHoursField;
            }
            set {
                if ((this.NonWorkingHoursField.Equals(value) != true)) {
                    this.NonWorkingHoursField = value;
                    this.RaisePropertyChanged("NonWorkingHours");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ProjectId {
            get {
                return this.ProjectIdField;
            }
            set {
                if ((this.ProjectIdField.Equals(value) != true)) {
                    this.ProjectIdField = value;
                    this.RaisePropertyChanged("ProjectId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Website {
            get {
                return this.WebsiteField;
            }
            set {
                if ((object.ReferenceEquals(this.WebsiteField, value) != true)) {
                    this.WebsiteField = value;
                    this.RaisePropertyChanged("Website");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int WorkingDays {
            get {
                return this.WorkingDaysField;
            }
            set {
                if ((this.WorkingDaysField.Equals(value) != true)) {
                    this.WorkingDaysField = value;
                    this.RaisePropertyChanged("WorkingDays");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int WorkingHours {
            get {
                return this.WorkingHoursField;
            }
            set {
                if ((this.WorkingHoursField.Equals(value) != true)) {
                    this.WorkingHoursField = value;
                    this.RaisePropertyChanged("WorkingHours");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RemoteCustomProperty", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.SpiraTest.Web.Services.v3_0.Dat" +
        "aObjects")]
    [System.SerializableAttribute()]
    public partial class RemoteCustomProperty : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AliasField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ArtifactTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteCustomList CustomListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CustomPropertyIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomPropertyNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> CustomPropertyTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomPropertyTypeNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ProjectIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Alias {
            get {
                return this.AliasField;
            }
            set {
                if ((object.ReferenceEquals(this.AliasField, value) != true)) {
                    this.AliasField = value;
                    this.RaisePropertyChanged("Alias");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ArtifactTypeId {
            get {
                return this.ArtifactTypeIdField;
            }
            set {
                if ((this.ArtifactTypeIdField.Equals(value) != true)) {
                    this.ArtifactTypeIdField = value;
                    this.RaisePropertyChanged("ArtifactTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteCustomList CustomList {
            get {
                return this.CustomListField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomListField, value) != true)) {
                    this.CustomListField = value;
                    this.RaisePropertyChanged("CustomList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CustomPropertyId {
            get {
                return this.CustomPropertyIdField;
            }
            set {
                if ((this.CustomPropertyIdField.Equals(value) != true)) {
                    this.CustomPropertyIdField = value;
                    this.RaisePropertyChanged("CustomPropertyId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomPropertyName {
            get {
                return this.CustomPropertyNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomPropertyNameField, value) != true)) {
                    this.CustomPropertyNameField = value;
                    this.RaisePropertyChanged("CustomPropertyName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> CustomPropertyTypeId {
            get {
                return this.CustomPropertyTypeIdField;
            }
            set {
                if ((this.CustomPropertyTypeIdField.Equals(value) != true)) {
                    this.CustomPropertyTypeIdField = value;
                    this.RaisePropertyChanged("CustomPropertyTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomPropertyTypeName {
            get {
                return this.CustomPropertyTypeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomPropertyTypeNameField, value) != true)) {
                    this.CustomPropertyTypeNameField = value;
                    this.RaisePropertyChanged("CustomPropertyTypeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ProjectId {
            get {
                return this.ProjectIdField;
            }
            set {
                if ((this.ProjectIdField.Equals(value) != true)) {
                    this.ProjectIdField = value;
                    this.RaisePropertyChanged("ProjectId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RemoteProjectRole", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.SpiraTest.Web.Services.v3_0.Dat" +
        "aObjects")]
    [System.SerializableAttribute()]
    public partial class RemoteProjectRole : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AdminField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DiscussionsAddField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DocumentsAddField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DocumentsDeleteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DocumentsEditField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ProjectRoleIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SourceCodeViewField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Active {
            get {
                return this.ActiveField;
            }
            set {
                if ((this.ActiveField.Equals(value) != true)) {
                    this.ActiveField = value;
                    this.RaisePropertyChanged("Active");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Admin {
            get {
                return this.AdminField;
            }
            set {
                if ((this.AdminField.Equals(value) != true)) {
                    this.AdminField = value;
                    this.RaisePropertyChanged("Admin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DiscussionsAdd {
            get {
                return this.DiscussionsAddField;
            }
            set {
                if ((this.DiscussionsAddField.Equals(value) != true)) {
                    this.DiscussionsAddField = value;
                    this.RaisePropertyChanged("DiscussionsAdd");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DocumentsAdd {
            get {
                return this.DocumentsAddField;
            }
            set {
                if ((this.DocumentsAddField.Equals(value) != true)) {
                    this.DocumentsAddField = value;
                    this.RaisePropertyChanged("DocumentsAdd");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DocumentsDelete {
            get {
                return this.DocumentsDeleteField;
            }
            set {
                if ((this.DocumentsDeleteField.Equals(value) != true)) {
                    this.DocumentsDeleteField = value;
                    this.RaisePropertyChanged("DocumentsDelete");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DocumentsEdit {
            get {
                return this.DocumentsEditField;
            }
            set {
                if ((this.DocumentsEditField.Equals(value) != true)) {
                    this.DocumentsEditField = value;
                    this.RaisePropertyChanged("DocumentsEdit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ProjectRoleId {
            get {
                return this.ProjectRoleIdField;
            }
            set {
                if ((this.ProjectRoleIdField.Equals(value) != true)) {
                    this.ProjectRoleIdField = value;
                    this.RaisePropertyChanged("ProjectRoleId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool SourceCodeView {
            get {
                return this.SourceCodeViewField;
            }
            set {
                if ((this.SourceCodeViewField.Equals(value) != true)) {
                    this.SourceCodeViewField = value;
                    this.RaisePropertyChanged("SourceCodeView");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RemoteReleaseTestCaseMapping", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.SpiraTest.Web.Services.v3_0.Dat" +
        "aObjects")]
    [System.SerializableAttribute()]
    public partial class RemoteReleaseTestCaseMapping : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ReleaseIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TestCaseIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ReleaseId {
            get {
                return this.ReleaseIdField;
            }
            set {
                if ((this.ReleaseIdField.Equals(value) != true)) {
                    this.ReleaseIdField = value;
                    this.RaisePropertyChanged("ReleaseId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TestCaseId {
            get {
                return this.TestCaseIdField;
            }
            set {
                if ((this.TestCaseIdField.Equals(value) != true)) {
                    this.TestCaseIdField = value;
                    this.RaisePropertyChanged("TestCaseId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RemoteRequirementTestCaseMapping", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.SpiraTest.Web.Services.v3_0.Dat" +
        "aObjects")]
    [System.SerializableAttribute()]
    public partial class RemoteRequirementTestCaseMapping : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RequirementIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TestCaseIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RequirementId {
            get {
                return this.RequirementIdField;
            }
            set {
                if ((this.RequirementIdField.Equals(value) != true)) {
                    this.RequirementIdField = value;
                    this.RaisePropertyChanged("RequirementId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TestCaseId {
            get {
                return this.TestCaseIdField;
            }
            set {
                if ((this.TestCaseIdField.Equals(value) != true)) {
                    this.TestCaseIdField = value;
                    this.RaisePropertyChanged("TestCaseId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RemoteVersion", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.SpiraTest.Web.Services.v3_0.Dat" +
        "aObjects")]
    [System.SerializableAttribute()]
    public partial class RemoteVersion : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> PatchField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VersionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Patch {
            get {
                return this.PatchField;
            }
            set {
                if ((this.PatchField.Equals(value) != true)) {
                    this.PatchField = value;
                    this.RaisePropertyChanged("Patch");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Version {
            get {
                return this.VersionField;
            }
            set {
                if ((object.ReferenceEquals(this.VersionField, value) != true)) {
                    this.VersionField = value;
                    this.RaisePropertyChanged("Version");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RemoteSetting", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.SpiraTest.Web.Services.v3_0.Dat" +
        "aObjects")]
    [System.SerializableAttribute()]
    public partial class RemoteSetting : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RemoteDataMapping", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.SpiraTest.Web.Services.v3_0.Dat" +
        "aObjects")]
    [System.SerializableAttribute()]
    public partial class RemoteDataMapping : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExternalKeyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int InternalIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PrimaryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ProjectIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExternalKey {
            get {
                return this.ExternalKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.ExternalKeyField, value) != true)) {
                    this.ExternalKeyField = value;
                    this.RaisePropertyChanged("ExternalKey");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int InternalId {
            get {
                return this.InternalIdField;
            }
            set {
                if ((this.InternalIdField.Equals(value) != true)) {
                    this.InternalIdField = value;
                    this.RaisePropertyChanged("InternalId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Primary {
            get {
                return this.PrimaryField;
            }
            set {
                if ((this.PrimaryField.Equals(value) != true)) {
                    this.PrimaryField = value;
                    this.RaisePropertyChanged("Primary");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ProjectId {
            get {
                return this.ProjectIdField;
            }
            set {
                if ((this.ProjectIdField.Equals(value) != true)) {
                    this.ProjectIdField = value;
                    this.RaisePropertyChanged("ProjectId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RemoteDocument", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.SpiraTest.Web.Services.v3_0.Dat" +
        "aObjects")]
    [System.SerializableAttribute()]
    public partial class RemoteDocument : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ArtifactIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ArtifactTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AttachmentIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AttachmentTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AttachmentTypeNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AuthorIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AuthorNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrentVersionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime EditedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> EditorIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EditorNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FilenameOrUrlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ProjectAttachmentFolderIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ProjectAttachmentTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProjectAttachmentTypeNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SizeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TagsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime UploadDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteDocumentVersion[] VersionsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ArtifactId {
            get {
                return this.ArtifactIdField;
            }
            set {
                if ((this.ArtifactIdField.Equals(value) != true)) {
                    this.ArtifactIdField = value;
                    this.RaisePropertyChanged("ArtifactId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ArtifactTypeId {
            get {
                return this.ArtifactTypeIdField;
            }
            set {
                if ((this.ArtifactTypeIdField.Equals(value) != true)) {
                    this.ArtifactTypeIdField = value;
                    this.RaisePropertyChanged("ArtifactTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AttachmentId {
            get {
                return this.AttachmentIdField;
            }
            set {
                if ((this.AttachmentIdField.Equals(value) != true)) {
                    this.AttachmentIdField = value;
                    this.RaisePropertyChanged("AttachmentId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AttachmentTypeId {
            get {
                return this.AttachmentTypeIdField;
            }
            set {
                if ((this.AttachmentTypeIdField.Equals(value) != true)) {
                    this.AttachmentTypeIdField = value;
                    this.RaisePropertyChanged("AttachmentTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AttachmentTypeName {
            get {
                return this.AttachmentTypeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AttachmentTypeNameField, value) != true)) {
                    this.AttachmentTypeNameField = value;
                    this.RaisePropertyChanged("AttachmentTypeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AuthorId {
            get {
                return this.AuthorIdField;
            }
            set {
                if ((this.AuthorIdField.Equals(value) != true)) {
                    this.AuthorIdField = value;
                    this.RaisePropertyChanged("AuthorId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AuthorName {
            get {
                return this.AuthorNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AuthorNameField, value) != true)) {
                    this.AuthorNameField = value;
                    this.RaisePropertyChanged("AuthorName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrentVersion {
            get {
                return this.CurrentVersionField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrentVersionField, value) != true)) {
                    this.CurrentVersionField = value;
                    this.RaisePropertyChanged("CurrentVersion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EditedDate {
            get {
                return this.EditedDateField;
            }
            set {
                if ((this.EditedDateField.Equals(value) != true)) {
                    this.EditedDateField = value;
                    this.RaisePropertyChanged("EditedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> EditorId {
            get {
                return this.EditorIdField;
            }
            set {
                if ((this.EditorIdField.Equals(value) != true)) {
                    this.EditorIdField = value;
                    this.RaisePropertyChanged("EditorId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EditorName {
            get {
                return this.EditorNameField;
            }
            set {
                if ((object.ReferenceEquals(this.EditorNameField, value) != true)) {
                    this.EditorNameField = value;
                    this.RaisePropertyChanged("EditorName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FilenameOrUrl {
            get {
                return this.FilenameOrUrlField;
            }
            set {
                if ((object.ReferenceEquals(this.FilenameOrUrlField, value) != true)) {
                    this.FilenameOrUrlField = value;
                    this.RaisePropertyChanged("FilenameOrUrl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ProjectAttachmentFolderId {
            get {
                return this.ProjectAttachmentFolderIdField;
            }
            set {
                if ((this.ProjectAttachmentFolderIdField.Equals(value) != true)) {
                    this.ProjectAttachmentFolderIdField = value;
                    this.RaisePropertyChanged("ProjectAttachmentFolderId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ProjectAttachmentTypeId {
            get {
                return this.ProjectAttachmentTypeIdField;
            }
            set {
                if ((this.ProjectAttachmentTypeIdField.Equals(value) != true)) {
                    this.ProjectAttachmentTypeIdField = value;
                    this.RaisePropertyChanged("ProjectAttachmentTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProjectAttachmentTypeName {
            get {
                return this.ProjectAttachmentTypeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ProjectAttachmentTypeNameField, value) != true)) {
                    this.ProjectAttachmentTypeNameField = value;
                    this.RaisePropertyChanged("ProjectAttachmentTypeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Size {
            get {
                return this.SizeField;
            }
            set {
                if ((this.SizeField.Equals(value) != true)) {
                    this.SizeField = value;
                    this.RaisePropertyChanged("Size");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Tags {
            get {
                return this.TagsField;
            }
            set {
                if ((object.ReferenceEquals(this.TagsField, value) != true)) {
                    this.TagsField = value;
                    this.RaisePropertyChanged("Tags");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime UploadDate {
            get {
                return this.UploadDateField;
            }
            set {
                if ((this.UploadDateField.Equals(value) != true)) {
                    this.UploadDateField = value;
                    this.RaisePropertyChanged("UploadDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteDocumentVersion[] Versions {
            get {
                return this.VersionsField;
            }
            set {
                if ((object.ReferenceEquals(this.VersionsField, value) != true)) {
                    this.VersionsField = value;
                    this.RaisePropertyChanged("Versions");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RemoteDocumentVersion", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.SpiraTest.Web.Services.v3_0.Dat" +
        "aObjects")]
    [System.SerializableAttribute()]
    public partial class RemoteDocumentVersion : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AttachmentIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AttachmentVersionIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AuthorIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AuthorNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FilenameOrUrlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SizeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime UploadDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VersionNumberField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AttachmentId {
            get {
                return this.AttachmentIdField;
            }
            set {
                if ((this.AttachmentIdField.Equals(value) != true)) {
                    this.AttachmentIdField = value;
                    this.RaisePropertyChanged("AttachmentId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AttachmentVersionId {
            get {
                return this.AttachmentVersionIdField;
            }
            set {
                if ((this.AttachmentVersionIdField.Equals(value) != true)) {
                    this.AttachmentVersionIdField = value;
                    this.RaisePropertyChanged("AttachmentVersionId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AuthorId {
            get {
                return this.AuthorIdField;
            }
            set {
                if ((this.AuthorIdField.Equals(value) != true)) {
                    this.AuthorIdField = value;
                    this.RaisePropertyChanged("AuthorId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AuthorName {
            get {
                return this.AuthorNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AuthorNameField, value) != true)) {
                    this.AuthorNameField = value;
                    this.RaisePropertyChanged("AuthorName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FilenameOrUrl {
            get {
                return this.FilenameOrUrlField;
            }
            set {
                if ((object.ReferenceEquals(this.FilenameOrUrlField, value) != true)) {
                    this.FilenameOrUrlField = value;
                    this.RaisePropertyChanged("FilenameOrUrl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Size {
            get {
                return this.SizeField;
            }
            set {
                if ((this.SizeField.Equals(value) != true)) {
                    this.SizeField = value;
                    this.RaisePropertyChanged("Size");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime UploadDate {
            get {
                return this.UploadDateField;
            }
            set {
                if ((this.UploadDateField.Equals(value) != true)) {
                    this.UploadDateField = value;
                    this.RaisePropertyChanged("UploadDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VersionNumber {
            get {
                return this.VersionNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.VersionNumberField, value) != true)) {
                    this.VersionNumberField = value;
                    this.RaisePropertyChanged("VersionNumber");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RemoteDocumentType", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.SpiraTest.Web.Services.v3_0.Dat" +
        "aObjects")]
    [System.SerializableAttribute()]
    public partial class RemoteDocumentType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DefaultField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ProjectAttachmentTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ProjectIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Active {
            get {
                return this.ActiveField;
            }
            set {
                if ((this.ActiveField.Equals(value) != true)) {
                    this.ActiveField = value;
                    this.RaisePropertyChanged("Active");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Default {
            get {
                return this.DefaultField;
            }
            set {
                if ((this.DefaultField.Equals(value) != true)) {
                    this.DefaultField = value;
                    this.RaisePropertyChanged("Default");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ProjectAttachmentTypeId {
            get {
                return this.ProjectAttachmentTypeIdField;
            }
            set {
                if ((this.ProjectAttachmentTypeIdField.Equals(value) != true)) {
                    this.ProjectAttachmentTypeIdField = value;
                    this.RaisePropertyChanged("ProjectAttachmentTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ProjectId {
            get {
                return this.ProjectIdField;
            }
            set {
                if ((this.ProjectIdField.Equals(value) != true)) {
                    this.ProjectIdField = value;
                    this.RaisePropertyChanged("ProjectId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RemoteDocumentFolder", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.SpiraTest.Web.Services.v3_0.Dat" +
        "aObjects")]
    [System.SerializableAttribute()]
    public partial class RemoteDocumentFolder : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IndentLevelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ParentProjectAttachmentFolderIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ProjectAttachmentFolderIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ProjectIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IndentLevel {
            get {
                return this.IndentLevelField;
            }
            set {
                if ((object.ReferenceEquals(this.IndentLevelField, value) != true)) {
                    this.IndentLevelField = value;
                    this.RaisePropertyChanged("IndentLevel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ParentProjectAttachmentFolderId {
            get {
                return this.ParentProjectAttachmentFolderIdField;
            }
            set {
                if ((this.ParentProjectAttachmentFolderIdField.Equals(value) != true)) {
                    this.ParentProjectAttachmentFolderIdField = value;
                    this.RaisePropertyChanged("ParentProjectAttachmentFolderId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ProjectAttachmentFolderId {
            get {
                return this.ProjectAttachmentFolderIdField;
            }
            set {
                if ((this.ProjectAttachmentFolderIdField.Equals(value) != true)) {
                    this.ProjectAttachmentFolderIdField = value;
                    this.RaisePropertyChanged("ProjectAttachmentFolderId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ProjectId {
            get {
                return this.ProjectIdField;
            }
            set {
                if ((this.ProjectIdField.Equals(value) != true)) {
                    this.ProjectIdField = value;
                    this.RaisePropertyChanged("ProjectId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RemoteAssociation", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.SpiraTest.Web.Services.v3_0.Dat" +
        "aObjects")]
    [System.SerializableAttribute()]
    public partial class RemoteAssociation : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ArtifactLinkIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CommentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> CreationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> CreatorIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatorNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DestArtifactIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DestArtifactNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DestArtifactTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DestArtifactTypeNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SourceArtifactIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SourceArtifactTypeIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ArtifactLinkId {
            get {
                return this.ArtifactLinkIdField;
            }
            set {
                if ((this.ArtifactLinkIdField.Equals(value) != true)) {
                    this.ArtifactLinkIdField = value;
                    this.RaisePropertyChanged("ArtifactLinkId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Comment {
            get {
                return this.CommentField;
            }
            set {
                if ((object.ReferenceEquals(this.CommentField, value) != true)) {
                    this.CommentField = value;
                    this.RaisePropertyChanged("Comment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CreationDate {
            get {
                return this.CreationDateField;
            }
            set {
                if ((this.CreationDateField.Equals(value) != true)) {
                    this.CreationDateField = value;
                    this.RaisePropertyChanged("CreationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> CreatorId {
            get {
                return this.CreatorIdField;
            }
            set {
                if ((this.CreatorIdField.Equals(value) != true)) {
                    this.CreatorIdField = value;
                    this.RaisePropertyChanged("CreatorId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatorName {
            get {
                return this.CreatorNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatorNameField, value) != true)) {
                    this.CreatorNameField = value;
                    this.RaisePropertyChanged("CreatorName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DestArtifactId {
            get {
                return this.DestArtifactIdField;
            }
            set {
                if ((this.DestArtifactIdField.Equals(value) != true)) {
                    this.DestArtifactIdField = value;
                    this.RaisePropertyChanged("DestArtifactId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DestArtifactName {
            get {
                return this.DestArtifactNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DestArtifactNameField, value) != true)) {
                    this.DestArtifactNameField = value;
                    this.RaisePropertyChanged("DestArtifactName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DestArtifactTypeId {
            get {
                return this.DestArtifactTypeIdField;
            }
            set {
                if ((this.DestArtifactTypeIdField.Equals(value) != true)) {
                    this.DestArtifactTypeIdField = value;
                    this.RaisePropertyChanged("DestArtifactTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DestArtifactTypeName {
            get {
                return this.DestArtifactTypeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DestArtifactTypeNameField, value) != true)) {
                    this.DestArtifactTypeNameField = value;
                    this.RaisePropertyChanged("DestArtifactTypeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SourceArtifactId {
            get {
                return this.SourceArtifactIdField;
            }
            set {
                if ((this.SourceArtifactIdField.Equals(value) != true)) {
                    this.SourceArtifactIdField = value;
                    this.RaisePropertyChanged("SourceArtifactId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SourceArtifactTypeId {
            get {
                return this.SourceArtifactTypeIdField;
            }
            set {
                if ((this.SourceArtifactTypeIdField.Equals(value) != true)) {
                    this.SourceArtifactTypeIdField = value;
                    this.RaisePropertyChanged("SourceArtifactTypeId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RemoteIncidentPriority", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.SpiraTest.Web.Services.v3_0.Dat" +
        "aObjects")]
    [System.SerializableAttribute()]
    public partial class RemoteIncidentPriority : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ColorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> PriorityIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Active {
            get {
                return this.ActiveField;
            }
            set {
                if ((this.ActiveField.Equals(value) != true)) {
                    this.ActiveField = value;
                    this.RaisePropertyChanged("Active");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Color {
            get {
                return this.ColorField;
            }
            set {
                if ((object.ReferenceEquals(this.ColorField, value) != true)) {
                    this.ColorField = value;
                    this.RaisePropertyChanged("Color");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> PriorityId {
            get {
                return this.PriorityIdField;
            }
            set {
                if ((this.PriorityIdField.Equals(value) != true)) {
                    this.PriorityIdField = value;
                    this.RaisePropertyChanged("PriorityId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RemoteIncidentResolution", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.SpiraTest.Web.Services.v3_0.Dat" +
        "aObjects")]
    [System.SerializableAttribute()]
    public partial class RemoteIncidentResolution : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> CreatorIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatorNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IncidentIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> IncidentResolutionIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ResolutionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreationDate {
            get {
                return this.CreationDateField;
            }
            set {
                if ((this.CreationDateField.Equals(value) != true)) {
                    this.CreationDateField = value;
                    this.RaisePropertyChanged("CreationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> CreatorId {
            get {
                return this.CreatorIdField;
            }
            set {
                if ((this.CreatorIdField.Equals(value) != true)) {
                    this.CreatorIdField = value;
                    this.RaisePropertyChanged("CreatorId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatorName {
            get {
                return this.CreatorNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatorNameField, value) != true)) {
                    this.CreatorNameField = value;
                    this.RaisePropertyChanged("CreatorName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IncidentId {
            get {
                return this.IncidentIdField;
            }
            set {
                if ((this.IncidentIdField.Equals(value) != true)) {
                    this.IncidentIdField = value;
                    this.RaisePropertyChanged("IncidentId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> IncidentResolutionId {
            get {
                return this.IncidentResolutionIdField;
            }
            set {
                if ((this.IncidentResolutionIdField.Equals(value) != true)) {
                    this.IncidentResolutionIdField = value;
                    this.RaisePropertyChanged("IncidentResolutionId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Resolution {
            get {
                return this.ResolutionField;
            }
            set {
                if ((object.ReferenceEquals(this.ResolutionField, value) != true)) {
                    this.ResolutionField = value;
                    this.RaisePropertyChanged("Resolution");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RemoteIncidentSeverity", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.SpiraTest.Web.Services.v3_0.Dat" +
        "aObjects")]
    [System.SerializableAttribute()]
    public partial class RemoteIncidentSeverity : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ColorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> SeverityIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Active {
            get {
                return this.ActiveField;
            }
            set {
                if ((this.ActiveField.Equals(value) != true)) {
                    this.ActiveField = value;
                    this.RaisePropertyChanged("Active");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Color {
            get {
                return this.ColorField;
            }
            set {
                if ((object.ReferenceEquals(this.ColorField, value) != true)) {
                    this.ColorField = value;
                    this.RaisePropertyChanged("Color");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> SeverityId {
            get {
                return this.SeverityIdField;
            }
            set {
                if ((this.SeverityIdField.Equals(value) != true)) {
                    this.SeverityIdField = value;
                    this.RaisePropertyChanged("SeverityId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://www.inflectra.com/SpiraTest/Services/v3.0/", ConfigurationName="SpiraImportExport.IImportExport")]
    public interface IImportExport {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IService/Connection_Authenticate" +
            "", ReplyAction="http://www.inflectra.com/SpiraTest/Services/v3.0/IService/Connection_Authenticate" +
            "Response")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.ServiceFaultMessage), Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IService/Connection_Authenticate" +
            "ServiceFaultMessageFault", Name="ServiceFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.SpiraTest.Web.Services.v3_0")]
        bool Connection_Authenticate(string userName, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IService/Connection_Authenticate" +
            "2", ReplyAction="http://www.inflectra.com/SpiraTest/Services/v3.0/IService/Connection_Authenticate" +
            "2Response")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.ServiceFaultMessage), Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IService/Connection_Authenticate" +
            "2ServiceFaultMessageFault", Name="ServiceFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.SpiraTest.Web.Services.v3_0")]
        bool Connection_Authenticate2(string userName, string password, string plugInName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IService/Connection_ConnectToPro" +
            "ject", ReplyAction="http://www.inflectra.com/SpiraTest/Services/v3.0/IService/Connection_ConnectToPro" +
            "jectResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.ServiceFaultMessage), Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IService/Connection_ConnectToPro" +
            "jectServiceFaultMessageFault", Name="ServiceFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.SpiraTest.Web.Services.v3_0")]
        bool Connection_ConnectToProject(int projectId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IService/Connection_Disconnect", ReplyAction="http://www.inflectra.com/SpiraTest/Services/v3.0/IService/Connection_DisconnectRe" +
            "sponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.ServiceFaultMessage), Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IService/Connection_DisconnectSe" +
            "rviceFaultMessageFault", Name="ServiceFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.SpiraTest.Web.Services.v3_0")]
        void Connection_Disconnect();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IService/System_GetProductName", ReplyAction="http://www.inflectra.com/SpiraTest/Services/v3.0/IService/System_GetProductNameRe" +
            "sponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.ServiceFaultMessage), Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IService/System_GetProductNameSe" +
            "rviceFaultMessageFault", Name="ServiceFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.SpiraTest.Web.Services.v3_0")]
        string System_GetProductName();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IService/System_GetServerDateTim" +
            "e", ReplyAction="http://www.inflectra.com/SpiraTest/Services/v3.0/IService/System_GetServerDateTim" +
            "eResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.ServiceFaultMessage), Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IService/System_GetServerDateTim" +
            "eServiceFaultMessageFault", Name="ServiceFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.SpiraTest.Web.Services.v3_0")]
        System.DateTime System_GetServerDateTime();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IService/System_GetWebServerUrl", ReplyAction="http://www.inflectra.com/SpiraTest/Services/v3.0/IService/System_GetWebServerUrlR" +
            "esponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.ServiceFaultMessage), Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IService/System_GetWebServerUrlS" +
            "erviceFaultMessageFault", Name="ServiceFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.SpiraTest.Web.Services.v3_0")]
        string System_GetWebServerUrl();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/User_Create", ReplyAction="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/User_CreateRespons" +
            "e")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.ServiceFaultMessage), Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/User_CreateService" +
            "FaultMessageFault", Name="ServiceFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.SpiraTest.Web.Services.v3_0")]
        Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteUser User_Create(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteUser remoteUser, int projectRoleId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/User_RetrieveById", ReplyAction="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/User_RetrieveByIdR" +
            "esponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.ServiceFaultMessage), Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/User_RetrieveByIdS" +
            "erviceFaultMessageFault", Name="ServiceFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.SpiraTest.Web.Services.v3_0")]
        Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteUser User_RetrieveById(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/User_RetrieveByUse" +
            "rName", ReplyAction="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/User_RetrieveByUse" +
            "rNameResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.ServiceFaultMessage), Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/User_RetrieveByUse" +
            "rNameServiceFaultMessageFault", Name="ServiceFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.SpiraTest.Web.Services.v3_0")]
        Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteUser User_RetrieveByUserName(string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/TestCase_RetrieveC" +
            "omments", ReplyAction="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/TestCase_RetrieveC" +
            "ommentsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.ServiceFaultMessage), Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/TestCase_RetrieveC" +
            "ommentsServiceFaultMessageFault", Name="ServiceFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.SpiraTest.Web.Services.v3_0")]
        Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteComment[] TestCase_RetrieveComments(int TestCaseId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Release_RetrieveCo" +
            "mments", ReplyAction="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Release_RetrieveCo" +
            "mmentsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.ServiceFaultMessage), Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Release_RetrieveCo" +
            "mmentsServiceFaultMessageFault", Name="ServiceFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.SpiraTest.Web.Services.v3_0")]
        Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteComment[] Release_RetrieveComments(int ReleaseId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Requirement_Retrie" +
            "veComments", ReplyAction="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Requirement_Retrie" +
            "veCommentsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.ServiceFaultMessage), Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Requirement_Retrie" +
            "veCommentsServiceFaultMessageFault", Name="ServiceFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.SpiraTest.Web.Services.v3_0")]
        Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteComment[] Requirement_RetrieveComments(int RequirementId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/TestSet_RetrieveCo" +
            "mments", ReplyAction="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/TestSet_RetrieveCo" +
            "mmentsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.ServiceFaultMessage), Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/TestSet_RetrieveCo" +
            "mmentsServiceFaultMessageFault", Name="ServiceFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.SpiraTest.Web.Services.v3_0")]
        Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteComment[] TestSet_RetrieveComments(int TestSetId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Task_RetrieveComme" +
            "nts", ReplyAction="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Task_RetrieveComme" +
            "ntsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.ServiceFaultMessage), Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Task_RetrieveComme" +
            "ntsServiceFaultMessageFault", Name="ServiceFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.SpiraTest.Web.Services.v3_0")]
        Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteComment[] Task_RetrieveComments(int TaskId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Release_CreateComm" +
            "ent", ReplyAction="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Release_CreateComm" +
            "entResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.ServiceFaultMessage), Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Release_CreateComm" +
            "entServiceFaultMessageFault", Name="ServiceFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.SpiraTest.Web.Services.v3_0")]
        Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteComment Release_CreateComment(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteComment remoteComment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Requirement_Create" +
            "Comment", ReplyAction="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Requirement_Create" +
            "CommentResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.ServiceFaultMessage), Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Requirement_Create" +
            "CommentServiceFaultMessageFault", Name="ServiceFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.SpiraTest.Web.Services.v3_0")]
        Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteComment Requirement_CreateComment(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteComment remoteComment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Task_CreateComment" +
            "", ReplyAction="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Task_CreateComment" +
            "Response")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.ServiceFaultMessage), Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Task_CreateComment" +
            "ServiceFaultMessageFault", Name="ServiceFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.SpiraTest.Web.Services.v3_0")]
        Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteComment Task_CreateComment(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteComment remoteComment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/TestCase_CreateCom" +
            "ment", ReplyAction="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/TestCase_CreateCom" +
            "mentResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.ServiceFaultMessage), Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/TestCase_CreateCom" +
            "mentServiceFaultMessageFault", Name="ServiceFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.SpiraTest.Web.Services.v3_0")]
        Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteComment TestCase_CreateComment(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteComment remoteComment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/TestSet_CreateComm" +
            "ent", ReplyAction="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/TestSet_CreateComm" +
            "entResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.ServiceFaultMessage), Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/TestSet_CreateComm" +
            "entServiceFaultMessageFault", Name="ServiceFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.SpiraTest.Web.Services.v3_0")]
        Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteComment TestSet_CreateComment(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteComment remoteComment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/AutomationHost_Ret" +
            "rieve", ReplyAction="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/AutomationHost_Ret" +
            "rieveResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.ServiceFaultMessage), Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/AutomationHost_Ret" +
            "rieveServiceFaultMessageFault", Name="ServiceFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.SpiraTest.Web.Services.v3_0")]
        Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteAutomationHost[] AutomationHost_Retrieve(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteFilter[] remoteFilters, Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteSort remoteSort, int startingRow, int numberOfRows);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/AutomationHost_Ret" +
            "rieveById", ReplyAction="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/AutomationHost_Ret" +
            "rieveByIdResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.ServiceFaultMessage), Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/AutomationHost_Ret" +
            "rieveByIdServiceFaultMessageFault", Name="ServiceFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.SpiraTest.Web.Services.v3_0")]
        Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteAutomationHost AutomationHost_RetrieveById(int automationHostId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/AutomationHost_Ret" +
            "rieveByToken", ReplyAction="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/AutomationHost_Ret" +
            "rieveByTokenResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.ServiceFaultMessage), Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/AutomationHost_Ret" +
            "rieveByTokenServiceFaultMessageFault", Name="ServiceFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.SpiraTest.Web.Services.v3_0")]
        Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteAutomationHost AutomationHost_RetrieveByToken(string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/AutomationEngine_R" +
            "etrieveByToken", ReplyAction="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/AutomationEngine_R" +
            "etrieveByTokenResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.ServiceFaultMessage), Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/AutomationEngine_R" +
            "etrieveByTokenServiceFaultMessageFault", Name="ServiceFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.SpiraTest.Web.Services.v3_0")]
        Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteAutomationEngine AutomationEngine_RetrieveByToken(string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/AutomationEngine_R" +
            "etrieve", ReplyAction="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/AutomationEngine_R" +
            "etrieveResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.ServiceFaultMessage), Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/AutomationEngine_R" +
            "etrieveServiceFaultMessageFault", Name="ServiceFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.SpiraTest.Web.Services.v3_0")]
        Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteAutomationEngine[] AutomationEngine_Retrieve(bool activeOnly);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/AutomationEngine_R" +
            "etrieveById", ReplyAction="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/AutomationEngine_R" +
            "etrieveByIdResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.ServiceFaultMessage), Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/AutomationEngine_R" +
            "etrieveByIdServiceFaultMessageFault", Name="ServiceFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.SpiraTest.Web.Services.v3_0")]
        Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteAutomationEngine AutomationEngine_RetrieveById(int automationEngineId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/AutomationHost_Cre" +
            "ate", ReplyAction="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/AutomationHost_Cre" +
            "ateResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.ServiceFaultMessage), Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/AutomationHost_Cre" +
            "ateServiceFaultMessageFault", Name="ServiceFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.SpiraTest.Web.Services.v3_0")]
        Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteAutomationHost AutomationHost_Create(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteAutomationHost remoteAutomationHost);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/AutomationHost_Upd" +
            "ate", ReplyAction="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/AutomationHost_Upd" +
            "ateResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.ServiceFaultMessage), Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/AutomationHost_Upd" +
            "ateServiceFaultMessageFault", Name="ServiceFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.SpiraTest.Web.Services.v3_0")]
        void AutomationHost_Update(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteAutomationHost remoteAutomationHost);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/AutomationHost_Del" +
            "ete", ReplyAction="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/AutomationHost_Del" +
            "eteResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.ServiceFaultMessage), Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/AutomationHost_Del" +
            "eteServiceFaultMessageFault", Name="ServiceFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.SpiraTest.Web.Services.v3_0")]
        void AutomationHost_Delete(int automationHostId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Task_RetrieveById", ReplyAction="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Task_RetrieveByIdR" +
            "esponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.ServiceFaultMessage), Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Task_RetrieveByIdS" +
            "erviceFaultMessageFault", Name="ServiceFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.SpiraTest.Web.Services.v3_0")]
        Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteTask Task_RetrieveById(int taskId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Task_RetrieveForOw" +
            "ner", ReplyAction="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Task_RetrieveForOw" +
            "nerResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.ServiceFaultMessage), Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Task_RetrieveForOw" +
            "nerServiceFaultMessageFault", Name="ServiceFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.SpiraTest.Web.Services.v3_0")]
        Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteTask[] Task_RetrieveForOwner();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Task_RetrieveNew", ReplyAction="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Task_RetrieveNewRe" +
            "sponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.ServiceFaultMessage), Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Task_RetrieveNewSe" +
            "rviceFaultMessageFault", Name="ServiceFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.SpiraTest.Web.Services.v3_0")]
        Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteTask[] Task_RetrieveNew(System.DateTime creationDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Task_Update", ReplyAction="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Task_UpdateRespons" +
            "e")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.ServiceFaultMessage), Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Task_UpdateService" +
            "FaultMessageFault", Name="ServiceFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.SpiraTest.Web.Services.v3_0")]
        void Task_Update(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteTask remoteTask);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Task_Delete", ReplyAction="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Task_DeleteRespons" +
            "e")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.ServiceFaultMessage), Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Task_DeleteService" +
            "FaultMessageFault", Name="ServiceFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.SpiraTest.Web.Services.v3_0")]
        void Task_Delete(int taskId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/TestCase_AddParame" +
            "ter", ReplyAction="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/TestCase_AddParame" +
            "terResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.ServiceFaultMessage), Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/TestCase_AddParame" +
            "terServiceFaultMessageFault", Name="ServiceFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.SpiraTest.Web.Services.v3_0")]
        Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteTestCaseParameter TestCase_AddParameter(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteTestCaseParameter remoteTestCaseParameter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/TestCase_Create", ReplyAction="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/TestCase_CreateRes" +
            "ponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.ServiceFaultMessage), Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/TestCase_CreateSer" +
            "viceFaultMessageFault", Name="ServiceFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.SpiraTest.Web.Services.v3_0")]
        Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteTestCase TestCase_Create(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteTestCase remoteTestCase, System.Nullable<int> parentTestFolderId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/TestCase_CreateFol" +
            "der", ReplyAction="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/TestCase_CreateFol" +
            "derResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.ServiceFaultMessage), Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/TestCase_CreateFol" +
            "derServiceFaultMessageFault", Name="ServiceFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.SpiraTest.Web.Services.v3_0")]
        Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteTestCase TestCase_CreateFolder(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteTestCase remoteTestCase, System.Nullable<int> parentTestFolderId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/TestCase_CreatePar" +
            "ameterToken", ReplyAction="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/TestCase_CreatePar" +
            "ameterTokenResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.ServiceFaultMessage), Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/TestCase_CreatePar" +
            "ameterTokenServiceFaultMessageFault", Name="ServiceFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.SpiraTest.Web.Services.v3_0")]
        string TestCase_CreateParameterToken(string parameterName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/TestCase_Retrieve", ReplyAction="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/TestCase_RetrieveR" +
            "esponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.ServiceFaultMessage), Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/TestCase_RetrieveS" +
            "erviceFaultMessageFault", Name="ServiceFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.SpiraTest.Web.Services.v3_0")]
        Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteTestCase[] TestCase_Retrieve(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteFilter[] remoteFilters, int startingRow, int numberOfRows);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/TestCase_RetrieveB" +
            "yId", ReplyAction="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/TestCase_RetrieveB" +
            "yIdResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.ServiceFaultMessage), Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/TestCase_RetrieveB" +
            "yIdServiceFaultMessageFault", Name="ServiceFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.SpiraTest.Web.Services.v3_0")]
        Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteTestCase TestCase_RetrieveById(int testCaseId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/TestCase_RetrieveB" +
            "yReleaseId", ReplyAction="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/TestCase_RetrieveB" +
            "yReleaseIdResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.ServiceFaultMessage), Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/TestCase_RetrieveB" +
            "yReleaseIdServiceFaultMessageFault", Name="ServiceFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.SpiraTest.Web.Services.v3_0")]
        Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteTestCase[] TestCase_RetrieveByReleaseId(int releaseId, Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteFilter[] remoteFilters, int startingRow, int numberOfRows);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/TestCase_RetrieveB" +
            "yTestSetId", ReplyAction="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/TestCase_RetrieveB" +
            "yTestSetIdResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.ServiceFaultMessage), Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/TestCase_RetrieveB" +
            "yTestSetIdServiceFaultMessageFault", Name="ServiceFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.SpiraTest.Web.Services.v3_0")]
        Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteTestCase[] TestCase_RetrieveByTestSetId(int testSetId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/TestCase_RetrieveF" +
            "orOwner", ReplyAction="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/TestCase_RetrieveF" +
            "orOwnerResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.ServiceFaultMessage), Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/TestCase_RetrieveF" +
            "orOwnerServiceFaultMessageFault", Name="ServiceFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.SpiraTest.Web.Services.v3_0")]
        Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteTestCase[] TestCase_RetrieveForOwner();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/TestCase_RetrieveB" +
            "yFolder", ReplyAction="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/TestCase_RetrieveB" +
            "yFolderResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.ServiceFaultMessage), Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/TestCase_RetrieveB" +
            "yFolderServiceFaultMessageFault", Name="ServiceFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.SpiraTest.Web.Services.v3_0")]
        Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteTestCase[] TestCase_RetrieveByFolder(int testCaseFolderId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/TestCase_Update", ReplyAction="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/TestCase_UpdateRes" +
            "ponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.ServiceFaultMessage), Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/TestCase_UpdateSer" +
            "viceFaultMessageFault", Name="ServiceFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.SpiraTest.Web.Services.v3_0")]
        void TestCase_Update(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteTestCase remoteTestCase);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/TestCase_Delete", ReplyAction="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/TestCase_DeleteRes" +
            "ponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.ServiceFaultMessage), Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/TestCase_DeleteSer" +
            "viceFaultMessageFault", Name="ServiceFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.SpiraTest.Web.Services.v3_0")]
        void TestCase_Delete(int testCaseId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/TestRun_CreateFrom" +
            "TestCases", ReplyAction="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/TestRun_CreateFrom" +
            "TestCasesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.ServiceFaultMessage), Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/TestRun_CreateFrom" +
            "TestCasesServiceFaultMessageFault", Name="ServiceFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.SpiraTest.Web.Services.v3_0")]
        Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteManualTestRun[] TestRun_CreateFromTestCases(int[] testCaseIds, System.Nullable<int> releaseId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/TestRun_CreateFrom" +
            "TestSet", ReplyAction="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/TestRun_CreateFrom" +
            "TestSetResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.ServiceFaultMessage), Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/TestRun_CreateFrom" +
            "TestSetServiceFaultMessageFault", Name="ServiceFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.SpiraTest.Web.Services.v3_0")]
        Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteManualTestRun[] TestRun_CreateFromTestSet(int testSetId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/TestRun_CreateForA" +
            "utomationHost", ReplyAction="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/TestRun_CreateForA" +
            "utomationHostResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.ServiceFaultMessage), Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/TestRun_CreateForA" +
            "utomationHostServiceFaultMessageFault", Name="ServiceFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.SpiraTest.Web.Services.v3_0")]
        Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteAutomatedTestRun[] TestRun_CreateForAutomationHost(string automationHostToken, Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.DateRange dateRange);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/TestRun_CreateForA" +
            "utomatedTestSet", ReplyAction="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/TestRun_CreateForA" +
            "utomatedTestSetResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.ServiceFaultMessage), Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/TestRun_CreateForA" +
            "utomatedTestSetServiceFaultMessageFault", Name="ServiceFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.SpiraTest.Web.Services.v3_0")]
        Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteAutomatedTestRun[] TestRun_CreateForAutomatedTestSet(int testSetId, string automationHostToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/TestRun_RecordAuto" +
            "mated1", ReplyAction="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/TestRun_RecordAuto" +
            "mated1Response")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.ServiceFaultMessage), Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/TestRun_RecordAuto" +
            "mated1ServiceFaultMessageFault", Name="ServiceFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.SpiraTest.Web.Services.v3_0")]
        Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteAutomatedTestRun TestRun_RecordAutomated1(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteAutomatedTestRun remoteTestRun);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/TestRun_RecordAuto" +
            "mated2", ReplyAction="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/TestRun_RecordAuto" +
            "mated2Response")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.ServiceFaultMessage), Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/TestRun_RecordAuto" +
            "mated2ServiceFaultMessageFault", Name="ServiceFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.SpiraTest.Web.Services.v3_0")]
        int TestRun_RecordAutomated2(
                    string userName, 
                    string password, 
                    int projectId, 
                    int testerUserId, 
                    int testCaseId, 
                    System.Nullable<int> releaseId, 
                    System.Nullable<int> testSetId, 
                    System.Nullable<int> testSetTestCaseId, 
                    System.DateTime startDate, 
                    System.DateTime endDate, 
                    int executionStatusId, 
                    string runnerName, 
                    string runnerTestName, 
                    int runnerAssertCount, 
                    string runnerMessage, 
                    string runnerStackTrace);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/TestRun_RecordAuto" +
            "mated3", ReplyAction="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/TestRun_RecordAuto" +
            "mated3Response")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.ServiceFaultMessage), Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/TestRun_RecordAuto" +
            "mated3ServiceFaultMessageFault", Name="ServiceFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.SpiraTest.Web.Services.v3_0")]
        Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteAutomatedTestRun[] TestRun_RecordAutomated3(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteAutomatedTestRun[] remoteTestRuns);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/TestRun_Retrieve", ReplyAction="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/TestRun_RetrieveRe" +
            "sponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.ServiceFaultMessage), Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/TestRun_RetrieveSe" +
            "rviceFaultMessageFault", Name="ServiceFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.SpiraTest.Web.Services.v3_0")]
        Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteTestRun[] TestRun_Retrieve(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteFilter[] remoteFilters, Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteSort remoteSort, int startingRow, int numberOfRows);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/TestRun_RetrieveBy" +
            "Id", ReplyAction="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/TestRun_RetrieveBy" +
            "IdResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.ServiceFaultMessage), Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/TestRun_RetrieveBy" +
            "IdServiceFaultMessageFault", Name="ServiceFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.SpiraTest.Web.Services.v3_0")]
        Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteTestRun TestRun_RetrieveById(int testRunId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/TestRun_RetrieveAu" +
            "tomatedById", ReplyAction="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/TestRun_RetrieveAu" +
            "tomatedByIdResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.ServiceFaultMessage), Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/TestRun_RetrieveAu" +
            "tomatedByIdServiceFaultMessageFault", Name="ServiceFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.SpiraTest.Web.Services.v3_0")]
        Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteAutomatedTestRun TestRun_RetrieveAutomatedById(int testRunId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/TestRun_RetrieveMa" +
            "nualById", ReplyAction="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/TestRun_RetrieveMa" +
            "nualByIdResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.ServiceFaultMessage), Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/TestRun_RetrieveMa" +
            "nualByIdServiceFaultMessageFault", Name="ServiceFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.SpiraTest.Web.Services.v3_0")]
        Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteManualTestRun TestRun_RetrieveManualById(int testRunId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/TestRun_Save", ReplyAction="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/TestRun_SaveRespon" +
            "se")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.ServiceFaultMessage), Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/TestRun_SaveServic" +
            "eFaultMessageFault", Name="ServiceFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.SpiraTest.Web.Services.v3_0")]
        Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteManualTestRun[] TestRun_Save(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteManualTestRun[] remoteTestRuns, System.DateTime endDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/TestSet_AddTestMap" +
            "ping", ReplyAction="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/TestSet_AddTestMap" +
            "pingResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.ServiceFaultMessage), Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/TestSet_AddTestMap" +
            "pingServiceFaultMessageFault", Name="ServiceFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.SpiraTest.Web.Services.v3_0")]
        void TestSet_AddTestMapping(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteTestSetTestCaseMapping remoteTestSetTestCaseMapping, System.Nullable<int> existingTestSetTestCaseId, Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteTestSetTestCaseParameter[] parameters);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/TestSet_Create", ReplyAction="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/TestSet_CreateResp" +
            "onse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.ServiceFaultMessage), Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/TestSet_CreateServ" +
            "iceFaultMessageFault", Name="ServiceFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.SpiraTest.Web.Services.v3_0")]
        Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteTestSet TestSet_Create(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteTestSet remoteTestSet, System.Nullable<int> parentTestSetFolderId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/TestSet_CreateFold" +
            "er", ReplyAction="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/TestSet_CreateFold" +
            "erResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.ServiceFaultMessage), Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/TestSet_CreateFold" +
            "erServiceFaultMessageFault", Name="ServiceFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.SpiraTest.Web.Services.v3_0")]
        Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteTestSet TestSet_CreateFolder(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteTestSet remoteTestSet, System.Nullable<int> parentTestSetFolderId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/TestSet_RemoveTest" +
            "Mapping", ReplyAction="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/TestSet_RemoveTest" +
            "MappingResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.ServiceFaultMessage), Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/TestSet_RemoveTest" +
            "MappingServiceFaultMessageFault", Name="ServiceFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.SpiraTest.Web.Services.v3_0")]
        void TestSet_RemoveTestMapping(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteTestSetTestCaseMapping remoteTestSetTestCaseMapping);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/TestSet_RetrieveTe" +
            "stCaseMapping", ReplyAction="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/TestSet_RetrieveTe" +
            "stCaseMappingResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.ServiceFaultMessage), Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/TestSet_RetrieveTe" +
            "stCaseMappingServiceFaultMessageFault", Name="ServiceFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.SpiraTest.Web.Services.v3_0")]
        Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteTestSetTestCaseMapping[] TestSet_RetrieveTestCaseMapping(int testSetId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/TestSet_Retrieve", ReplyAction="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/TestSet_RetrieveRe" +
            "sponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.ServiceFaultMessage), Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/TestSet_RetrieveSe" +
            "rviceFaultMessageFault", Name="ServiceFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.SpiraTest.Web.Services.v3_0")]
        Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteTestSet[] TestSet_Retrieve(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteFilter[] remoteFilters, int startingRow, int numberOfRows);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/TestSet_RetrieveBy" +
            "Id", ReplyAction="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/TestSet_RetrieveBy" +
            "IdResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.ServiceFaultMessage), Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/TestSet_RetrieveBy" +
            "IdServiceFaultMessageFault", Name="ServiceFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.SpiraTest.Web.Services.v3_0")]
        Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteTestSet TestSet_RetrieveById(int testSetId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/TestSet_RetrieveFo" +
            "rOwner", ReplyAction="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/TestSet_RetrieveFo" +
            "rOwnerResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.ServiceFaultMessage), Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/TestSet_RetrieveFo" +
            "rOwnerServiceFaultMessageFault", Name="ServiceFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.SpiraTest.Web.Services.v3_0")]
        Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteTestSet[] TestSet_RetrieveForOwner();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/TestSet_Update", ReplyAction="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/TestSet_UpdateResp" +
            "onse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.ServiceFaultMessage), Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/TestSet_UpdateServ" +
            "iceFaultMessageFault", Name="ServiceFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.SpiraTest.Web.Services.v3_0")]
        void TestSet_Update(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteTestSet remoteTestSet);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/TestSet_Delete", ReplyAction="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/TestSet_DeleteResp" +
            "onse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.ServiceFaultMessage), Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/TestSet_DeleteServ" +
            "iceFaultMessageFault", Name="ServiceFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.SpiraTest.Web.Services.v3_0")]
        void TestSet_Delete(int testSetId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/TestCase_AddStep", ReplyAction="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/TestCase_AddStepRe" +
            "sponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.ServiceFaultMessage), Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/TestCase_AddStepSe" +
            "rviceFaultMessageFault", Name="ServiceFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.SpiraTest.Web.Services.v3_0")]
        Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteTestStep TestCase_AddStep(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteTestStep remoteTestStep, int testCaseId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/TestCase_AddLink", ReplyAction="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/TestCase_AddLinkRe" +
            "sponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.ServiceFaultMessage), Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/TestCase_AddLinkSe" +
            "rviceFaultMessageFault", Name="ServiceFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.SpiraTest.Web.Services.v3_0")]
        int TestCase_AddLink(int testCaseId, int position, int linkedTestCaseId, Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteTestStepParameter[] parameters);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/TestCase_AddUpdate" +
            "AutomationScript", ReplyAction="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/TestCase_AddUpdate" +
            "AutomationScriptResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.ServiceFaultMessage), Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/TestCase_AddUpdate" +
            "AutomationScriptServiceFaultMessageFault", Name="ServiceFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.SpiraTest.Web.Services.v3_0")]
        void TestCase_AddUpdateAutomationScript(int testCaseId, System.Nullable<int> automationEngineId, string urlOrFilename, string description, byte[] binaryData, string version, System.Nullable<int> projectAttachmentTypeId, System.Nullable<int> projectAttachmentFolderId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Incident_RetrieveS" +
            "tatuses", ReplyAction="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Incident_RetrieveS" +
            "tatusesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.ServiceFaultMessage), Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Incident_RetrieveS" +
            "tatusesServiceFaultMessageFault", Name="ServiceFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.SpiraTest.Web.Services.v3_0")]
        Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteIncidentStatus[] Incident_RetrieveStatuses();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Incident_RetrieveT" +
            "ypes", ReplyAction="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Incident_RetrieveT" +
            "ypesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.ServiceFaultMessage), Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Incident_RetrieveT" +
            "ypesServiceFaultMessageFault", Name="ServiceFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.SpiraTest.Web.Services.v3_0")]
        Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteIncidentType[] Incident_RetrieveTypes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Incident_RetrieveW" +
            "orkflowFields", ReplyAction="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Incident_RetrieveW" +
            "orkflowFieldsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.ServiceFaultMessage), Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Incident_RetrieveW" +
            "orkflowFieldsServiceFaultMessageFault", Name="ServiceFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.SpiraTest.Web.Services.v3_0")]
        Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteWorkflowIncidentFields[] Incident_RetrieveWorkflowFields(int currentTypeId, int currentStatusId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Incident_RetrieveW" +
            "orkflowTransitions", ReplyAction="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Incident_RetrieveW" +
            "orkflowTransitionsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.ServiceFaultMessage), Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Incident_RetrieveW" +
            "orkflowTransitionsServiceFaultMessageFault", Name="ServiceFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.SpiraTest.Web.Services.v3_0")]
        Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteWorkflowIncidentTransition[] Incident_RetrieveWorkflowTransitions(int currentTypeId, int currentStatusId, bool isDetector, bool isOwner);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Incident_RetrieveW" +
            "orkflowCustomProperties", ReplyAction="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Incident_RetrieveW" +
            "orkflowCustomPropertiesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.ServiceFaultMessage), Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Incident_RetrieveW" +
            "orkflowCustomPropertiesServiceFaultMessageFault", Name="ServiceFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.SpiraTest.Web.Services.v3_0")]
        Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteWorkflowIncidentCustomProperties[] Incident_RetrieveWorkflowCustomProperties(int currentTypeId, int currentStatusId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Incident_Update", ReplyAction="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Incident_UpdateRes" +
            "ponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.ServiceFaultMessage), Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Incident_UpdateSer" +
            "viceFaultMessageFault", Name="ServiceFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.SpiraTest.Web.Services.v3_0")]
        void Incident_Update(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteIncident remoteIncident);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Incident_Delete", ReplyAction="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Incident_DeleteRes" +
            "ponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.ServiceFaultMessage), Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Incident_DeleteSer" +
            "viceFaultMessageFault", Name="ServiceFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.SpiraTest.Web.Services.v3_0")]
        void Incident_Delete(int incidentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/CustomProperty_Add" +
            "CustomList", ReplyAction="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/CustomProperty_Add" +
            "CustomListResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.ServiceFaultMessage), Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/CustomProperty_Add" +
            "CustomListServiceFaultMessageFault", Name="ServiceFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.SpiraTest.Web.Services.v3_0")]
        Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteCustomList CustomProperty_AddCustomList(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteCustomList remoteCustomList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/CustomProperty_Add" +
            "CustomListValue", ReplyAction="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/CustomProperty_Add" +
            "CustomListValueResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.ServiceFaultMessage), Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/CustomProperty_Add" +
            "CustomListValueServiceFaultMessageFault", Name="ServiceFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.SpiraTest.Web.Services.v3_0")]
        Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteCustomListValue CustomProperty_AddCustomListValue(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteCustomListValue remoteCustomListValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Project_Create", ReplyAction="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Project_CreateResp" +
            "onse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.ServiceFaultMessage), Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Project_CreateServ" +
            "iceFaultMessageFault", Name="ServiceFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.SpiraTest.Web.Services.v3_0")]
        Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteProject Project_Create(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteProject remoteProject, System.Nullable<int> existingProjectId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Project_Delete", ReplyAction="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Project_DeleteResp" +
            "onse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.ServiceFaultMessage), Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Project_DeleteServ" +
            "iceFaultMessageFault", Name="ServiceFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.SpiraTest.Web.Services.v3_0")]
        void Project_Delete(int projectId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Project_Retrieve", ReplyAction="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Project_RetrieveRe" +
            "sponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.ServiceFaultMessage), Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Project_RetrieveSe" +
            "rviceFaultMessageFault", Name="ServiceFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.SpiraTest.Web.Services.v3_0")]
        Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteProject[] Project_Retrieve();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Project_RetrieveBy" +
            "Id", ReplyAction="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Project_RetrieveBy" +
            "IdResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.ServiceFaultMessage), Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Project_RetrieveBy" +
            "IdServiceFaultMessageFault", Name="ServiceFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.SpiraTest.Web.Services.v3_0")]
        Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteProject Project_RetrieveById(int projectId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Project_RetrieveUs" +
            "erMembership", ReplyAction="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Project_RetrieveUs" +
            "erMembershipResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.ServiceFaultMessage), Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Project_RetrieveUs" +
            "erMembershipServiceFaultMessageFault", Name="ServiceFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.SpiraTest.Web.Services.v3_0")]
        Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteProjectUser[] Project_RetrieveUserMembership();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/CustomProperty_Upd" +
            "ateCustomProperties", ReplyAction="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/CustomProperty_Upd" +
            "ateCustomPropertiesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.ServiceFaultMessage), Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/CustomProperty_Upd" +
            "ateCustomPropertiesServiceFaultMessageFault", Name="ServiceFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.SpiraTest.Web.Services.v3_0")]
        void CustomProperty_UpdateCustomProperties(int artifactTypeId, Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteCustomProperty[] remoteCustomProperties);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/CustomProperty_Ret" +
            "rieveCustomListById", ReplyAction="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/CustomProperty_Ret" +
            "rieveCustomListByIdResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.ServiceFaultMessage), Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/CustomProperty_Ret" +
            "rieveCustomListByIdServiceFaultMessageFault", Name="ServiceFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.SpiraTest.Web.Services.v3_0")]
        Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteCustomList CustomProperty_RetrieveCustomListById(int customListId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/CustomProperty_Ret" +
            "rieveCustomLists", ReplyAction="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/CustomProperty_Ret" +
            "rieveCustomListsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.ServiceFaultMessage), Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/CustomProperty_Ret" +
            "rieveCustomListsServiceFaultMessageFault", Name="ServiceFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.SpiraTest.Web.Services.v3_0")]
        Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteCustomList[] CustomProperty_RetrieveCustomLists();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/CustomProperty_Upd" +
            "ateCustomList", ReplyAction="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/CustomProperty_Upd" +
            "ateCustomListResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.ServiceFaultMessage), Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/CustomProperty_Upd" +
            "ateCustomListServiceFaultMessageFault", Name="ServiceFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.SpiraTest.Web.Services.v3_0")]
        void CustomProperty_UpdateCustomList(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteCustomList remoteCustomList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/ProjectRole_Retrie" +
            "ve", ReplyAction="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/ProjectRole_Retrie" +
            "veResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.ServiceFaultMessage), Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/ProjectRole_Retrie" +
            "veServiceFaultMessageFault", Name="ServiceFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.SpiraTest.Web.Services.v3_0")]
        Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteProjectRole[] ProjectRole_Retrieve();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Release_AddTestMap" +
            "ping", ReplyAction="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Release_AddTestMap" +
            "pingResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.ServiceFaultMessage), Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Release_AddTestMap" +
            "pingServiceFaultMessageFault", Name="ServiceFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.SpiraTest.Web.Services.v3_0")]
        void Release_AddTestMapping(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteReleaseTestCaseMapping remoteReleaseTestCaseMapping);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Release_AddTestMap" +
            "ping2", ReplyAction="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Release_AddTestMap" +
            "ping2Response")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.ServiceFaultMessage), Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Release_AddTestMap" +
            "ping2ServiceFaultMessageFault", Name="ServiceFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.SpiraTest.Web.Services.v3_0")]
        void Release_AddTestMapping2(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteReleaseTestCaseMapping[] remoteReleaseTestCaseMappings);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Release_Create", ReplyAction="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Release_CreateResp" +
            "onse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.ServiceFaultMessage), Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Release_CreateServ" +
            "iceFaultMessageFault", Name="ServiceFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.SpiraTest.Web.Services.v3_0")]
        Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteRelease Release_Create(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteRelease remoteRelease, System.Nullable<int> parentReleaseId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Release_RemoveTest" +
            "Mapping", ReplyAction="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Release_RemoveTest" +
            "MappingResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.ServiceFaultMessage), Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Release_RemoveTest" +
            "MappingServiceFaultMessageFault", Name="ServiceFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.SpiraTest.Web.Services.v3_0")]
        void Release_RemoveTestMapping(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteReleaseTestCaseMapping remoteReleaseTestCaseMapping);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Release_Retrieve", ReplyAction="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Release_RetrieveRe" +
            "sponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.ServiceFaultMessage), Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Release_RetrieveSe" +
            "rviceFaultMessageFault", Name="ServiceFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.SpiraTest.Web.Services.v3_0")]
        Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteRelease[] Release_Retrieve(bool activeOnly);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Release_Retrieve2", ReplyAction="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Release_Retrieve2R" +
            "esponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.ServiceFaultMessage), Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Release_Retrieve2S" +
            "erviceFaultMessageFault", Name="ServiceFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.SpiraTest.Web.Services.v3_0")]
        Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteRelease[] Release_Retrieve2(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteFilter[] remoteFilters, int startingRow, int numberOfRows);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Release_RetrieveBy" +
            "Id", ReplyAction="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Release_RetrieveBy" +
            "IdResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.ServiceFaultMessage), Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Release_RetrieveBy" +
            "IdServiceFaultMessageFault", Name="ServiceFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.SpiraTest.Web.Services.v3_0")]
        Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteRelease Release_RetrieveById(int releaseId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Release_Update", ReplyAction="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Release_UpdateResp" +
            "onse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.ServiceFaultMessage), Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Release_UpdateServ" +
            "iceFaultMessageFault", Name="ServiceFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.SpiraTest.Web.Services.v3_0")]
        void Release_Update(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteRelease remoteRelease);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Release_Delete", ReplyAction="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Release_DeleteResp" +
            "onse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.ServiceFaultMessage), Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Release_DeleteServ" +
            "iceFaultMessageFault", Name="ServiceFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.SpiraTest.Web.Services.v3_0")]
        void Release_Delete(int releaseId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Requirement_AddTes" +
            "tCoverage", ReplyAction="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Requirement_AddTes" +
            "tCoverageResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.ServiceFaultMessage), Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Requirement_AddTes" +
            "tCoverageServiceFaultMessageFault", Name="ServiceFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.SpiraTest.Web.Services.v3_0")]
        void Requirement_AddTestCoverage(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteRequirementTestCaseMapping remoteReqTestCaseMapping);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Requirement_Create" +
            "1", ReplyAction="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Requirement_Create" +
            "1Response")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.ServiceFaultMessage), Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Requirement_Create" +
            "1ServiceFaultMessageFault", Name="ServiceFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.SpiraTest.Web.Services.v3_0")]
        Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteRequirement Requirement_Create1(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteRequirement remoteRequirement, int indentPosition);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Requirement_Create" +
            "2", ReplyAction="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Requirement_Create" +
            "2Response")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.ServiceFaultMessage), Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Requirement_Create" +
            "2ServiceFaultMessageFault", Name="ServiceFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.SpiraTest.Web.Services.v3_0")]
        Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteRequirement Requirement_Create2(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteRequirement remoteRequirement, System.Nullable<int> parentRequirementId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Requirement_Remove" +
            "TestCoverage", ReplyAction="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Requirement_Remove" +
            "TestCoverageResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.ServiceFaultMessage), Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Requirement_Remove" +
            "TestCoverageServiceFaultMessageFault", Name="ServiceFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.SpiraTest.Web.Services.v3_0")]
        void Requirement_RemoveTestCoverage(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteRequirementTestCaseMapping remoteReqTestCaseMapping);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Requirement_Retrie" +
            "ve", ReplyAction="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Requirement_Retrie" +
            "veResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.ServiceFaultMessage), Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Requirement_Retrie" +
            "veServiceFaultMessageFault", Name="ServiceFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.SpiraTest.Web.Services.v3_0")]
        Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteRequirement[] Requirement_Retrieve(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteFilter[] remoteFilters, int startingRow, int numberOfRows);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Requirement_Retrie" +
            "veById", ReplyAction="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Requirement_Retrie" +
            "veByIdResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.ServiceFaultMessage), Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Requirement_Retrie" +
            "veByIdServiceFaultMessageFault", Name="ServiceFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.SpiraTest.Web.Services.v3_0")]
        Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteRequirement Requirement_RetrieveById(int requirementId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Requirement_Retrie" +
            "veForOwner", ReplyAction="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Requirement_Retrie" +
            "veForOwnerResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.ServiceFaultMessage), Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Requirement_Retrie" +
            "veForOwnerServiceFaultMessageFault", Name="ServiceFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.SpiraTest.Web.Services.v3_0")]
        Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteRequirement[] Requirement_RetrieveForOwner();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Requirement_Update" +
            "", ReplyAction="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Requirement_Update" +
            "Response")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.ServiceFaultMessage), Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Requirement_Update" +
            "ServiceFaultMessageFault", Name="ServiceFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.SpiraTest.Web.Services.v3_0")]
        void Requirement_Update(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteRequirement remoteRequirement);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Requirement_Delete" +
            "", ReplyAction="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Requirement_Delete" +
            "Response")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.ServiceFaultMessage), Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Requirement_Delete" +
            "ServiceFaultMessageFault", Name="ServiceFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.SpiraTest.Web.Services.v3_0")]
        void Requirement_Delete(int requirementId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/System_GetProductV" +
            "ersion", ReplyAction="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/System_GetProductV" +
            "ersionResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.ServiceFaultMessage), Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/System_GetProductV" +
            "ersionServiceFaultMessageFault", Name="ServiceFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.SpiraTest.Web.Services.v3_0")]
        Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteVersion System_GetProductVersion();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/System_GetSettings" +
            "", ReplyAction="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/System_GetSettings" +
            "Response")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.ServiceFaultMessage), Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/System_GetSettings" +
            "ServiceFaultMessageFault", Name="ServiceFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.SpiraTest.Web.Services.v3_0")]
        Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteSetting[] System_GetSettings();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/System_GetArtifact" +
            "Url", ReplyAction="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/System_GetArtifact" +
            "UrlResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.ServiceFaultMessage), Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/System_GetArtifact" +
            "UrlServiceFaultMessageFault", Name="ServiceFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.SpiraTest.Web.Services.v3_0")]
        string System_GetArtifactUrl(int navigationLinkId, int projectId, int artifactId, string tabName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Task_Create", ReplyAction="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Task_CreateRespons" +
            "e")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.ServiceFaultMessage), Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Task_CreateService" +
            "FaultMessageFault", Name="ServiceFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.SpiraTest.Web.Services.v3_0")]
        Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteTask Task_Create(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteTask remoteTask);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Task_Retrieve", ReplyAction="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Task_RetrieveRespo" +
            "nse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.ServiceFaultMessage), Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Task_RetrieveServi" +
            "ceFaultMessageFault", Name="ServiceFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.SpiraTest.Web.Services.v3_0")]
        Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteTask[] Task_Retrieve(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteFilter[] remoteFilters, Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteSort remoteSort, int startingRow, int numberOfRows);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/CustomProperty_Ret" +
            "rieveForArtifactType", ReplyAction="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/CustomProperty_Ret" +
            "rieveForArtifactTypeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.ServiceFaultMessage), Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/CustomProperty_Ret" +
            "rieveForArtifactTypeServiceFaultMessageFault", Name="ServiceFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.SpiraTest.Web.Services.v3_0")]
        Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteCustomProperty[] CustomProperty_RetrieveForArtifactType(int artifactTypeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/DataMapping_AddArt" +
            "ifactMappings", ReplyAction="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/DataMapping_AddArt" +
            "ifactMappingsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.ServiceFaultMessage), Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/DataMapping_AddArt" +
            "ifactMappingsServiceFaultMessageFault", Name="ServiceFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.SpiraTest.Web.Services.v3_0")]
        void DataMapping_AddArtifactMappings(int dataSyncSystemId, int artifactTypeId, Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteDataMapping[] remoteDataMappings);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/DataMapping_AddUse" +
            "rMappings", ReplyAction="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/DataMapping_AddUse" +
            "rMappingsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.ServiceFaultMessage), Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/DataMapping_AddUse" +
            "rMappingsServiceFaultMessageFault", Name="ServiceFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.SpiraTest.Web.Services.v3_0")]
        void DataMapping_AddUserMappings(int dataSyncSystemId, Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteDataMapping[] remoteDataMappings);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/DataMapping_Remove" +
            "ArtifactMappings", ReplyAction="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/DataMapping_Remove" +
            "ArtifactMappingsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.ServiceFaultMessage), Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/DataMapping_Remove" +
            "ArtifactMappingsServiceFaultMessageFault", Name="ServiceFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.SpiraTest.Web.Services.v3_0")]
        void DataMapping_RemoveArtifactMappings(int dataSyncSystemId, int artifactTypeId, Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteDataMapping[] remoteDataMappings);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/DataMapping_Retrie" +
            "veArtifactMappings", ReplyAction="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/DataMapping_Retrie" +
            "veArtifactMappingsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.ServiceFaultMessage), Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/DataMapping_Retrie" +
            "veArtifactMappingsServiceFaultMessageFault", Name="ServiceFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.SpiraTest.Web.Services.v3_0")]
        Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteDataMapping[] DataMapping_RetrieveArtifactMappings(int dataSyncSystemId, int artifactTypeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/DataMapping_Retrie" +
            "veCustomPropertyMapping", ReplyAction="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/DataMapping_Retrie" +
            "veCustomPropertyMappingResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.ServiceFaultMessage), Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/DataMapping_Retrie" +
            "veCustomPropertyMappingServiceFaultMessageFault", Name="ServiceFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.SpiraTest.Web.Services.v3_0")]
        Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteDataMapping DataMapping_RetrieveCustomPropertyMapping(int dataSyncSystemId, int artifactTypeId, int customPropertyId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/DataMapping_Retrie" +
            "veCustomPropertyValueMappings", ReplyAction="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/DataMapping_Retrie" +
            "veCustomPropertyValueMappingsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.ServiceFaultMessage), Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/DataMapping_Retrie" +
            "veCustomPropertyValueMappingsServiceFaultMessageFault", Name="ServiceFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.SpiraTest.Web.Services.v3_0")]
        Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteDataMapping[] DataMapping_RetrieveCustomPropertyValueMappings(int dataSyncSystemId, int artifactTypeId, int customPropertyId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/DataMapping_Retrie" +
            "veFieldValueMappings", ReplyAction="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/DataMapping_Retrie" +
            "veFieldValueMappingsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.ServiceFaultMessage), Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/DataMapping_Retrie" +
            "veFieldValueMappingsServiceFaultMessageFault", Name="ServiceFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.SpiraTest.Web.Services.v3_0")]
        Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteDataMapping[] DataMapping_RetrieveFieldValueMappings(int dataSyncSystemId, int artifactFieldId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/DataMapping_Retrie" +
            "veProjectMappings", ReplyAction="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/DataMapping_Retrie" +
            "veProjectMappingsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.ServiceFaultMessage), Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/DataMapping_Retrie" +
            "veProjectMappingsServiceFaultMessageFault", Name="ServiceFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.SpiraTest.Web.Services.v3_0")]
        Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteDataMapping[] DataMapping_RetrieveProjectMappings(int dataSyncSystemId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/DataMapping_Retrie" +
            "veUserMappings", ReplyAction="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/DataMapping_Retrie" +
            "veUserMappingsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.ServiceFaultMessage), Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/DataMapping_Retrie" +
            "veUserMappingsServiceFaultMessageFault", Name="ServiceFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.SpiraTest.Web.Services.v3_0")]
        Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteDataMapping[] DataMapping_RetrieveUserMappings(int dataSyncSystemId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Document_OpenFile", ReplyAction="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Document_OpenFileR" +
            "esponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.ServiceFaultMessage), Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Document_OpenFileS" +
            "erviceFaultMessageFault", Name="ServiceFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.SpiraTest.Web.Services.v3_0")]
        byte[] Document_OpenFile(int attachmentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Document_AddFile", ReplyAction="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Document_AddFileRe" +
            "sponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.ServiceFaultMessage), Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Document_AddFileSe" +
            "rviceFaultMessageFault", Name="ServiceFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.SpiraTest.Web.Services.v3_0")]
        Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteDocument Document_AddFile(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteDocument remoteDocument, byte[] binaryData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Document_AddUrl", ReplyAction="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Document_AddUrlRes" +
            "ponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.ServiceFaultMessage), Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Document_AddUrlSer" +
            "viceFaultMessageFault", Name="ServiceFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.SpiraTest.Web.Services.v3_0")]
        Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteDocument Document_AddUrl(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteDocument remoteDocument);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Document_AddFileVe" +
            "rsion", ReplyAction="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Document_AddFileVe" +
            "rsionResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.ServiceFaultMessage), Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Document_AddFileVe" +
            "rsionServiceFaultMessageFault", Name="ServiceFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.SpiraTest.Web.Services.v3_0")]
        Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteDocumentVersion Document_AddFileVersion(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteDocumentVersion remoteDocumentVersion, byte[] binaryData, bool makeCurrent);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Document_AddUrlVer" +
            "sion", ReplyAction="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Document_AddUrlVer" +
            "sionResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.ServiceFaultMessage), Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Document_AddUrlVer" +
            "sionServiceFaultMessageFault", Name="ServiceFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.SpiraTest.Web.Services.v3_0")]
        Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteDocumentVersion Document_AddUrlVersion(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteDocumentVersion remoteDocumentVersion, bool makeCurrent);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Document_DeleteFro" +
            "mArtifact", ReplyAction="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Document_DeleteFro" +
            "mArtifactResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.ServiceFaultMessage), Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Document_DeleteFro" +
            "mArtifactServiceFaultMessageFault", Name="ServiceFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.SpiraTest.Web.Services.v3_0")]
        void Document_DeleteFromArtifact(int attachmentId, int artifactTypeId, int artifactId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Document_Delete", ReplyAction="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Document_DeleteRes" +
            "ponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.ServiceFaultMessage), Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Document_DeleteSer" +
            "viceFaultMessageFault", Name="ServiceFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.SpiraTest.Web.Services.v3_0")]
        void Document_Delete(int attachmentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Document_RetrieveF" +
            "orFolder", ReplyAction="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Document_RetrieveF" +
            "orFolderResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.ServiceFaultMessage), Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Document_RetrieveF" +
            "orFolderServiceFaultMessageFault", Name="ServiceFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.SpiraTest.Web.Services.v3_0")]
        Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteDocument[] Document_RetrieveForFolder(int folderId, Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteFilter[] remoteFilters, Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteSort remoteSort, int startingRow, int numberRows);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Document_RetrieveF" +
            "orArtifact", ReplyAction="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Document_RetrieveF" +
            "orArtifactResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.ServiceFaultMessage), Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Document_RetrieveF" +
            "orArtifactServiceFaultMessageFault", Name="ServiceFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.SpiraTest.Web.Services.v3_0")]
        Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteDocument[] Document_RetrieveForArtifact(int artifactTypeId, int artifactId, Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteFilter[] remoteFilters, Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteSort remoteSort);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Document_RetrieveB" +
            "yId", ReplyAction="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Document_RetrieveB" +
            "yIdResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.ServiceFaultMessage), Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Document_RetrieveB" +
            "yIdServiceFaultMessageFault", Name="ServiceFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.SpiraTest.Web.Services.v3_0")]
        Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteDocument Document_RetrieveById(int attachmentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Document_RetrieveT" +
            "ypes", ReplyAction="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Document_RetrieveT" +
            "ypesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.ServiceFaultMessage), Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Document_RetrieveT" +
            "ypesServiceFaultMessageFault", Name="ServiceFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.SpiraTest.Web.Services.v3_0")]
        Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteDocumentType[] Document_RetrieveTypes(bool activeOnly);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Document_RetrieveF" +
            "olders", ReplyAction="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Document_RetrieveF" +
            "oldersResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.ServiceFaultMessage), Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Document_RetrieveF" +
            "oldersServiceFaultMessageFault", Name="ServiceFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.SpiraTest.Web.Services.v3_0")]
        Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteDocumentFolder[] Document_RetrieveFolders();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Document_RetrieveF" +
            "olderById", ReplyAction="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Document_RetrieveF" +
            "olderByIdResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.ServiceFaultMessage), Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Document_RetrieveF" +
            "olderByIdServiceFaultMessageFault", Name="ServiceFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.SpiraTest.Web.Services.v3_0")]
        Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteDocumentFolder Document_RetrieveFolderById(int folderId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Document_AddFolder" +
            "", ReplyAction="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Document_AddFolder" +
            "Response")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.ServiceFaultMessage), Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Document_AddFolder" +
            "ServiceFaultMessageFault", Name="ServiceFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.SpiraTest.Web.Services.v3_0")]
        Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteDocumentFolder Document_AddFolder(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteDocumentFolder remoteDocumentFolder);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Document_DeleteFol" +
            "der", ReplyAction="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Document_DeleteFol" +
            "derResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.ServiceFaultMessage), Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Document_DeleteFol" +
            "derServiceFaultMessageFault", Name="ServiceFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.SpiraTest.Web.Services.v3_0")]
        void Document_DeleteFolder(int projectAttachmentFolderId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Document_UpdateFol" +
            "der", ReplyAction="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Document_UpdateFol" +
            "derResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.ServiceFaultMessage), Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Document_UpdateFol" +
            "derServiceFaultMessageFault", Name="ServiceFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.SpiraTest.Web.Services.v3_0")]
        void Document_UpdateFolder(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteDocumentFolder remoteDocumentFolder);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Association_Create" +
            "", ReplyAction="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Association_Create" +
            "Response")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.ServiceFaultMessage), Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Association_Create" +
            "ServiceFaultMessageFault", Name="ServiceFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.SpiraTest.Web.Services.v3_0")]
        Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteAssociation Association_Create(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteAssociation remoteAssociation);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Association_Update" +
            "", ReplyAction="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Association_Update" +
            "Response")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.ServiceFaultMessage), Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Association_Update" +
            "ServiceFaultMessageFault", Name="ServiceFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.SpiraTest.Web.Services.v3_0")]
        void Association_Update(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteAssociation remoteAssociation);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Association_Retrie" +
            "veForArtifact", ReplyAction="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Association_Retrie" +
            "veForArtifactResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.ServiceFaultMessage), Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Association_Retrie" +
            "veForArtifactServiceFaultMessageFault", Name="ServiceFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.SpiraTest.Web.Services.v3_0")]
        Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteAssociation[] Association_RetrieveForArtifact(int artifactTypeId, int artifactId, Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteFilter[] remoteFilters, Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteSort remoteSort);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Incident_AddPriori" +
            "ty", ReplyAction="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Incident_AddPriori" +
            "tyResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.ServiceFaultMessage), Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Incident_AddPriori" +
            "tyServiceFaultMessageFault", Name="ServiceFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.SpiraTest.Web.Services.v3_0")]
        Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteIncidentPriority Incident_AddPriority(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteIncidentPriority remoteIncidentPriority);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Incident_AddResolu" +
            "tions", ReplyAction="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Incident_AddResolu" +
            "tionsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.ServiceFaultMessage), Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Incident_AddResolu" +
            "tionsServiceFaultMessageFault", Name="ServiceFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.SpiraTest.Web.Services.v3_0")]
        Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteIncidentResolution[] Incident_AddResolutions(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteIncidentResolution[] remoteIncidentResolutions);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Incident_AddSeveri" +
            "ty", ReplyAction="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Incident_AddSeveri" +
            "tyResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.ServiceFaultMessage), Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Incident_AddSeveri" +
            "tyServiceFaultMessageFault", Name="ServiceFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.SpiraTest.Web.Services.v3_0")]
        Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteIncidentSeverity Incident_AddSeverity(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteIncidentSeverity remoteIncidentSeverity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Incident_AddStatus" +
            "", ReplyAction="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Incident_AddStatus" +
            "Response")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.ServiceFaultMessage), Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Incident_AddStatus" +
            "ServiceFaultMessageFault", Name="ServiceFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.SpiraTest.Web.Services.v3_0")]
        Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteIncidentStatus Incident_AddStatus(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteIncidentStatus remoteIncidentStatus);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Incident_AddType", ReplyAction="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Incident_AddTypeRe" +
            "sponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.ServiceFaultMessage), Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Incident_AddTypeSe" +
            "rviceFaultMessageFault", Name="ServiceFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.SpiraTest.Web.Services.v3_0")]
        Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteIncidentType Incident_AddType(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteIncidentType remoteIncidentType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Incident_Create", ReplyAction="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Incident_CreateRes" +
            "ponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.ServiceFaultMessage), Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Incident_CreateSer" +
            "viceFaultMessageFault", Name="ServiceFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.SpiraTest.Web.Services.v3_0")]
        Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteIncident Incident_Create(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteIncident remoteIncident);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Incident_Retrieve", ReplyAction="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Incident_RetrieveR" +
            "esponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.ServiceFaultMessage), Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Incident_RetrieveS" +
            "erviceFaultMessageFault", Name="ServiceFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.SpiraTest.Web.Services.v3_0")]
        Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteIncident[] Incident_Retrieve(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteFilter[] remoteFilters, Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteSort remoteSort, int startingRow, int numberOfRows);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Incident_RetrieveB" +
            "yId", ReplyAction="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Incident_RetrieveB" +
            "yIdResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.ServiceFaultMessage), Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Incident_RetrieveB" +
            "yIdServiceFaultMessageFault", Name="ServiceFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.SpiraTest.Web.Services.v3_0")]
        Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteIncident Incident_RetrieveById(int incidentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Incident_RetrieveF" +
            "orOwner", ReplyAction="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Incident_RetrieveF" +
            "orOwnerResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.ServiceFaultMessage), Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Incident_RetrieveF" +
            "orOwnerServiceFaultMessageFault", Name="ServiceFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.SpiraTest.Web.Services.v3_0")]
        Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteIncident[] Incident_RetrieveForOwner();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Incident_RetrieveN" +
            "ew", ReplyAction="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Incident_RetrieveN" +
            "ewResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.ServiceFaultMessage), Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Incident_RetrieveN" +
            "ewServiceFaultMessageFault", Name="ServiceFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.SpiraTest.Web.Services.v3_0")]
        Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteIncident[] Incident_RetrieveNew(System.DateTime creationDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Incident_RetrieveP" +
            "riorities", ReplyAction="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Incident_RetrieveP" +
            "rioritiesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.ServiceFaultMessage), Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Incident_RetrieveP" +
            "rioritiesServiceFaultMessageFault", Name="ServiceFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.SpiraTest.Web.Services.v3_0")]
        Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteIncidentPriority[] Incident_RetrievePriorities();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Incident_RetrieveR" +
            "esolutions", ReplyAction="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Incident_RetrieveR" +
            "esolutionsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.ServiceFaultMessage), Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Incident_RetrieveR" +
            "esolutionsServiceFaultMessageFault", Name="ServiceFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.SpiraTest.Web.Services.v3_0")]
        Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteIncidentResolution[] Incident_RetrieveResolutions(int incidentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Incident_RetrieveS" +
            "everities", ReplyAction="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Incident_RetrieveS" +
            "everitiesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.ServiceFaultMessage), Action="http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Incident_RetrieveS" +
            "everitiesServiceFaultMessageFault", Name="ServiceFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.SpiraTest.Web.Services.v3_0")]
        Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteIncidentSeverity[] Incident_RetrieveSeverities();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IImportExportChannel : Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.IImportExport, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ImportExportClient : System.ServiceModel.ClientBase<Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.IImportExport>, Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.IImportExport {
        
        public ImportExportClient() {
        }
        
        public ImportExportClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ImportExportClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ImportExportClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ImportExportClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool Connection_Authenticate(string userName, string password) {
            return base.Channel.Connection_Authenticate(userName, password);
        }
        
        public bool Connection_Authenticate2(string userName, string password, string plugInName) {
            return base.Channel.Connection_Authenticate2(userName, password, plugInName);
        }
        
        public bool Connection_ConnectToProject(int projectId) {
            return base.Channel.Connection_ConnectToProject(projectId);
        }
        
        public void Connection_Disconnect() {
            base.Channel.Connection_Disconnect();
        }
        
        public string System_GetProductName() {
            return base.Channel.System_GetProductName();
        }
        
        public System.DateTime System_GetServerDateTime() {
            return base.Channel.System_GetServerDateTime();
        }
        
        public string System_GetWebServerUrl() {
            return base.Channel.System_GetWebServerUrl();
        }
        
        public Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteUser User_Create(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteUser remoteUser, int projectRoleId) {
            return base.Channel.User_Create(remoteUser, projectRoleId);
        }
        
        public Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteUser User_RetrieveById(int userId) {
            return base.Channel.User_RetrieveById(userId);
        }
        
        public Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteUser User_RetrieveByUserName(string userName) {
            return base.Channel.User_RetrieveByUserName(userName);
        }
        
        public Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteComment[] TestCase_RetrieveComments(int TestCaseId) {
            return base.Channel.TestCase_RetrieveComments(TestCaseId);
        }
        
        public Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteComment[] Release_RetrieveComments(int ReleaseId) {
            return base.Channel.Release_RetrieveComments(ReleaseId);
        }
        
        public Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteComment[] Requirement_RetrieveComments(int RequirementId) {
            return base.Channel.Requirement_RetrieveComments(RequirementId);
        }
        
        public Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteComment[] TestSet_RetrieveComments(int TestSetId) {
            return base.Channel.TestSet_RetrieveComments(TestSetId);
        }
        
        public Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteComment[] Task_RetrieveComments(int TaskId) {
            return base.Channel.Task_RetrieveComments(TaskId);
        }
        
        public Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteComment Release_CreateComment(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteComment remoteComment) {
            return base.Channel.Release_CreateComment(remoteComment);
        }
        
        public Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteComment Requirement_CreateComment(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteComment remoteComment) {
            return base.Channel.Requirement_CreateComment(remoteComment);
        }
        
        public Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteComment Task_CreateComment(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteComment remoteComment) {
            return base.Channel.Task_CreateComment(remoteComment);
        }
        
        public Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteComment TestCase_CreateComment(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteComment remoteComment) {
            return base.Channel.TestCase_CreateComment(remoteComment);
        }
        
        public Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteComment TestSet_CreateComment(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteComment remoteComment) {
            return base.Channel.TestSet_CreateComment(remoteComment);
        }
        
        public Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteAutomationHost[] AutomationHost_Retrieve(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteFilter[] remoteFilters, Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteSort remoteSort, int startingRow, int numberOfRows) {
            return base.Channel.AutomationHost_Retrieve(remoteFilters, remoteSort, startingRow, numberOfRows);
        }
        
        public Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteAutomationHost AutomationHost_RetrieveById(int automationHostId) {
            return base.Channel.AutomationHost_RetrieveById(automationHostId);
        }
        
        public Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteAutomationHost AutomationHost_RetrieveByToken(string token) {
            return base.Channel.AutomationHost_RetrieveByToken(token);
        }
        
        public Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteAutomationEngine AutomationEngine_RetrieveByToken(string token) {
            return base.Channel.AutomationEngine_RetrieveByToken(token);
        }
        
        public Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteAutomationEngine[] AutomationEngine_Retrieve(bool activeOnly) {
            return base.Channel.AutomationEngine_Retrieve(activeOnly);
        }
        
        public Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteAutomationEngine AutomationEngine_RetrieveById(int automationEngineId) {
            return base.Channel.AutomationEngine_RetrieveById(automationEngineId);
        }
        
        public Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteAutomationHost AutomationHost_Create(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteAutomationHost remoteAutomationHost) {
            return base.Channel.AutomationHost_Create(remoteAutomationHost);
        }
        
        public void AutomationHost_Update(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteAutomationHost remoteAutomationHost) {
            base.Channel.AutomationHost_Update(remoteAutomationHost);
        }
        
        public void AutomationHost_Delete(int automationHostId) {
            base.Channel.AutomationHost_Delete(automationHostId);
        }
        
        public Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteTask Task_RetrieveById(int taskId) {
            return base.Channel.Task_RetrieveById(taskId);
        }
        
        public Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteTask[] Task_RetrieveForOwner() {
            return base.Channel.Task_RetrieveForOwner();
        }
        
        public Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteTask[] Task_RetrieveNew(System.DateTime creationDate) {
            return base.Channel.Task_RetrieveNew(creationDate);
        }
        
        public void Task_Update(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteTask remoteTask) {
            base.Channel.Task_Update(remoteTask);
        }
        
        public void Task_Delete(int taskId) {
            base.Channel.Task_Delete(taskId);
        }
        
        public Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteTestCaseParameter TestCase_AddParameter(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteTestCaseParameter remoteTestCaseParameter) {
            return base.Channel.TestCase_AddParameter(remoteTestCaseParameter);
        }
        
        public Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteTestCase TestCase_Create(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteTestCase remoteTestCase, System.Nullable<int> parentTestFolderId) {
            return base.Channel.TestCase_Create(remoteTestCase, parentTestFolderId);
        }
        
        public Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteTestCase TestCase_CreateFolder(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteTestCase remoteTestCase, System.Nullable<int> parentTestFolderId) {
            return base.Channel.TestCase_CreateFolder(remoteTestCase, parentTestFolderId);
        }
        
        public string TestCase_CreateParameterToken(string parameterName) {
            return base.Channel.TestCase_CreateParameterToken(parameterName);
        }
        
        public Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteTestCase[] TestCase_Retrieve(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteFilter[] remoteFilters, int startingRow, int numberOfRows) {
            return base.Channel.TestCase_Retrieve(remoteFilters, startingRow, numberOfRows);
        }
        
        public Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteTestCase TestCase_RetrieveById(int testCaseId) {
            return base.Channel.TestCase_RetrieveById(testCaseId);
        }
        
        public Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteTestCase[] TestCase_RetrieveByReleaseId(int releaseId, Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteFilter[] remoteFilters, int startingRow, int numberOfRows) {
            return base.Channel.TestCase_RetrieveByReleaseId(releaseId, remoteFilters, startingRow, numberOfRows);
        }
        
        public Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteTestCase[] TestCase_RetrieveByTestSetId(int testSetId) {
            return base.Channel.TestCase_RetrieveByTestSetId(testSetId);
        }
        
        public Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteTestCase[] TestCase_RetrieveForOwner() {
            return base.Channel.TestCase_RetrieveForOwner();
        }
        
        public Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteTestCase[] TestCase_RetrieveByFolder(int testCaseFolderId) {
            return base.Channel.TestCase_RetrieveByFolder(testCaseFolderId);
        }
        
        public void TestCase_Update(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteTestCase remoteTestCase) {
            base.Channel.TestCase_Update(remoteTestCase);
        }
        
        public void TestCase_Delete(int testCaseId) {
            base.Channel.TestCase_Delete(testCaseId);
        }
        
        public Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteManualTestRun[] TestRun_CreateFromTestCases(int[] testCaseIds, System.Nullable<int> releaseId) {
            return base.Channel.TestRun_CreateFromTestCases(testCaseIds, releaseId);
        }
        
        public Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteManualTestRun[] TestRun_CreateFromTestSet(int testSetId) {
            return base.Channel.TestRun_CreateFromTestSet(testSetId);
        }
        
        public Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteAutomatedTestRun[] TestRun_CreateForAutomationHost(string automationHostToken, Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.DateRange dateRange) {
            return base.Channel.TestRun_CreateForAutomationHost(automationHostToken, dateRange);
        }
        
        public Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteAutomatedTestRun[] TestRun_CreateForAutomatedTestSet(int testSetId, string automationHostToken) {
            return base.Channel.TestRun_CreateForAutomatedTestSet(testSetId, automationHostToken);
        }
        
        public Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteAutomatedTestRun TestRun_RecordAutomated1(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteAutomatedTestRun remoteTestRun) {
            return base.Channel.TestRun_RecordAutomated1(remoteTestRun);
        }
        
        public int TestRun_RecordAutomated2(
                    string userName, 
                    string password, 
                    int projectId, 
                    int testerUserId, 
                    int testCaseId, 
                    System.Nullable<int> releaseId, 
                    System.Nullable<int> testSetId, 
                    System.Nullable<int> testSetTestCaseId, 
                    System.DateTime startDate, 
                    System.DateTime endDate, 
                    int executionStatusId, 
                    string runnerName, 
                    string runnerTestName, 
                    int runnerAssertCount, 
                    string runnerMessage, 
                    string runnerStackTrace) {
            return base.Channel.TestRun_RecordAutomated2(userName, password, projectId, testerUserId, testCaseId, releaseId, testSetId, testSetTestCaseId, startDate, endDate, executionStatusId, runnerName, runnerTestName, runnerAssertCount, runnerMessage, runnerStackTrace);
        }
        
        public Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteAutomatedTestRun[] TestRun_RecordAutomated3(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteAutomatedTestRun[] remoteTestRuns) {
            return base.Channel.TestRun_RecordAutomated3(remoteTestRuns);
        }
        
        public Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteTestRun[] TestRun_Retrieve(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteFilter[] remoteFilters, Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteSort remoteSort, int startingRow, int numberOfRows) {
            return base.Channel.TestRun_Retrieve(remoteFilters, remoteSort, startingRow, numberOfRows);
        }
        
        public Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteTestRun TestRun_RetrieveById(int testRunId) {
            return base.Channel.TestRun_RetrieveById(testRunId);
        }
        
        public Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteAutomatedTestRun TestRun_RetrieveAutomatedById(int testRunId) {
            return base.Channel.TestRun_RetrieveAutomatedById(testRunId);
        }
        
        public Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteManualTestRun TestRun_RetrieveManualById(int testRunId) {
            return base.Channel.TestRun_RetrieveManualById(testRunId);
        }
        
        public Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteManualTestRun[] TestRun_Save(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteManualTestRun[] remoteTestRuns, System.DateTime endDate) {
            return base.Channel.TestRun_Save(remoteTestRuns, endDate);
        }
        
        public void TestSet_AddTestMapping(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteTestSetTestCaseMapping remoteTestSetTestCaseMapping, System.Nullable<int> existingTestSetTestCaseId, Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteTestSetTestCaseParameter[] parameters) {
            base.Channel.TestSet_AddTestMapping(remoteTestSetTestCaseMapping, existingTestSetTestCaseId, parameters);
        }
        
        public Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteTestSet TestSet_Create(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteTestSet remoteTestSet, System.Nullable<int> parentTestSetFolderId) {
            return base.Channel.TestSet_Create(remoteTestSet, parentTestSetFolderId);
        }
        
        public Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteTestSet TestSet_CreateFolder(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteTestSet remoteTestSet, System.Nullable<int> parentTestSetFolderId) {
            return base.Channel.TestSet_CreateFolder(remoteTestSet, parentTestSetFolderId);
        }
        
        public void TestSet_RemoveTestMapping(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteTestSetTestCaseMapping remoteTestSetTestCaseMapping) {
            base.Channel.TestSet_RemoveTestMapping(remoteTestSetTestCaseMapping);
        }
        
        public Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteTestSetTestCaseMapping[] TestSet_RetrieveTestCaseMapping(int testSetId) {
            return base.Channel.TestSet_RetrieveTestCaseMapping(testSetId);
        }
        
        public Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteTestSet[] TestSet_Retrieve(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteFilter[] remoteFilters, int startingRow, int numberOfRows) {
            return base.Channel.TestSet_Retrieve(remoteFilters, startingRow, numberOfRows);
        }
        
        public Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteTestSet TestSet_RetrieveById(int testSetId) {
            return base.Channel.TestSet_RetrieveById(testSetId);
        }
        
        public Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteTestSet[] TestSet_RetrieveForOwner() {
            return base.Channel.TestSet_RetrieveForOwner();
        }
        
        public void TestSet_Update(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteTestSet remoteTestSet) {
            base.Channel.TestSet_Update(remoteTestSet);
        }
        
        public void TestSet_Delete(int testSetId) {
            base.Channel.TestSet_Delete(testSetId);
        }
        
        public Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteTestStep TestCase_AddStep(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteTestStep remoteTestStep, int testCaseId) {
            return base.Channel.TestCase_AddStep(remoteTestStep, testCaseId);
        }
        
        public int TestCase_AddLink(int testCaseId, int position, int linkedTestCaseId, Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteTestStepParameter[] parameters) {
            return base.Channel.TestCase_AddLink(testCaseId, position, linkedTestCaseId, parameters);
        }
        
        public void TestCase_AddUpdateAutomationScript(int testCaseId, System.Nullable<int> automationEngineId, string urlOrFilename, string description, byte[] binaryData, string version, System.Nullable<int> projectAttachmentTypeId, System.Nullable<int> projectAttachmentFolderId) {
            base.Channel.TestCase_AddUpdateAutomationScript(testCaseId, automationEngineId, urlOrFilename, description, binaryData, version, projectAttachmentTypeId, projectAttachmentFolderId);
        }
        
        public Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteIncidentStatus[] Incident_RetrieveStatuses() {
            return base.Channel.Incident_RetrieveStatuses();
        }
        
        public Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteIncidentType[] Incident_RetrieveTypes() {
            return base.Channel.Incident_RetrieveTypes();
        }
        
        public Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteWorkflowIncidentFields[] Incident_RetrieveWorkflowFields(int currentTypeId, int currentStatusId) {
            return base.Channel.Incident_RetrieveWorkflowFields(currentTypeId, currentStatusId);
        }
        
        public Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteWorkflowIncidentTransition[] Incident_RetrieveWorkflowTransitions(int currentTypeId, int currentStatusId, bool isDetector, bool isOwner) {
            return base.Channel.Incident_RetrieveWorkflowTransitions(currentTypeId, currentStatusId, isDetector, isOwner);
        }
        
        public Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteWorkflowIncidentCustomProperties[] Incident_RetrieveWorkflowCustomProperties(int currentTypeId, int currentStatusId) {
            return base.Channel.Incident_RetrieveWorkflowCustomProperties(currentTypeId, currentStatusId);
        }
        
        public void Incident_Update(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteIncident remoteIncident) {
            base.Channel.Incident_Update(remoteIncident);
        }
        
        public void Incident_Delete(int incidentId) {
            base.Channel.Incident_Delete(incidentId);
        }
        
        public Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteCustomList CustomProperty_AddCustomList(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteCustomList remoteCustomList) {
            return base.Channel.CustomProperty_AddCustomList(remoteCustomList);
        }
        
        public Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteCustomListValue CustomProperty_AddCustomListValue(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteCustomListValue remoteCustomListValue) {
            return base.Channel.CustomProperty_AddCustomListValue(remoteCustomListValue);
        }
        
        public Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteProject Project_Create(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteProject remoteProject, System.Nullable<int> existingProjectId) {
            return base.Channel.Project_Create(remoteProject, existingProjectId);
        }
        
        public void Project_Delete(int projectId) {
            base.Channel.Project_Delete(projectId);
        }
        
        public Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteProject[] Project_Retrieve() {
            return base.Channel.Project_Retrieve();
        }
        
        public Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteProject Project_RetrieveById(int projectId) {
            return base.Channel.Project_RetrieveById(projectId);
        }
        
        public Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteProjectUser[] Project_RetrieveUserMembership() {
            return base.Channel.Project_RetrieveUserMembership();
        }
        
        public void CustomProperty_UpdateCustomProperties(int artifactTypeId, Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteCustomProperty[] remoteCustomProperties) {
            base.Channel.CustomProperty_UpdateCustomProperties(artifactTypeId, remoteCustomProperties);
        }
        
        public Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteCustomList CustomProperty_RetrieveCustomListById(int customListId) {
            return base.Channel.CustomProperty_RetrieveCustomListById(customListId);
        }
        
        public Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteCustomList[] CustomProperty_RetrieveCustomLists() {
            return base.Channel.CustomProperty_RetrieveCustomLists();
        }
        
        public void CustomProperty_UpdateCustomList(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteCustomList remoteCustomList) {
            base.Channel.CustomProperty_UpdateCustomList(remoteCustomList);
        }
        
        public Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteProjectRole[] ProjectRole_Retrieve() {
            return base.Channel.ProjectRole_Retrieve();
        }
        
        public void Release_AddTestMapping(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteReleaseTestCaseMapping remoteReleaseTestCaseMapping) {
            base.Channel.Release_AddTestMapping(remoteReleaseTestCaseMapping);
        }
        
        public void Release_AddTestMapping2(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteReleaseTestCaseMapping[] remoteReleaseTestCaseMappings) {
            base.Channel.Release_AddTestMapping2(remoteReleaseTestCaseMappings);
        }
        
        public Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteRelease Release_Create(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteRelease remoteRelease, System.Nullable<int> parentReleaseId) {
            return base.Channel.Release_Create(remoteRelease, parentReleaseId);
        }
        
        public void Release_RemoveTestMapping(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteReleaseTestCaseMapping remoteReleaseTestCaseMapping) {
            base.Channel.Release_RemoveTestMapping(remoteReleaseTestCaseMapping);
        }
        
        public Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteRelease[] Release_Retrieve(bool activeOnly) {
            return base.Channel.Release_Retrieve(activeOnly);
        }
        
        public Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteRelease[] Release_Retrieve2(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteFilter[] remoteFilters, int startingRow, int numberOfRows) {
            return base.Channel.Release_Retrieve2(remoteFilters, startingRow, numberOfRows);
        }
        
        public Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteRelease Release_RetrieveById(int releaseId) {
            return base.Channel.Release_RetrieveById(releaseId);
        }
        
        public void Release_Update(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteRelease remoteRelease) {
            base.Channel.Release_Update(remoteRelease);
        }
        
        public void Release_Delete(int releaseId) {
            base.Channel.Release_Delete(releaseId);
        }
        
        public void Requirement_AddTestCoverage(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteRequirementTestCaseMapping remoteReqTestCaseMapping) {
            base.Channel.Requirement_AddTestCoverage(remoteReqTestCaseMapping);
        }
        
        public Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteRequirement Requirement_Create1(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteRequirement remoteRequirement, int indentPosition) {
            return base.Channel.Requirement_Create1(remoteRequirement, indentPosition);
        }
        
        public Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteRequirement Requirement_Create2(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteRequirement remoteRequirement, System.Nullable<int> parentRequirementId) {
            return base.Channel.Requirement_Create2(remoteRequirement, parentRequirementId);
        }
        
        public void Requirement_RemoveTestCoverage(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteRequirementTestCaseMapping remoteReqTestCaseMapping) {
            base.Channel.Requirement_RemoveTestCoverage(remoteReqTestCaseMapping);
        }
        
        public Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteRequirement[] Requirement_Retrieve(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteFilter[] remoteFilters, int startingRow, int numberOfRows) {
            return base.Channel.Requirement_Retrieve(remoteFilters, startingRow, numberOfRows);
        }
        
        public Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteRequirement Requirement_RetrieveById(int requirementId) {
            return base.Channel.Requirement_RetrieveById(requirementId);
        }
        
        public Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteRequirement[] Requirement_RetrieveForOwner() {
            return base.Channel.Requirement_RetrieveForOwner();
        }
        
        public void Requirement_Update(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteRequirement remoteRequirement) {
            base.Channel.Requirement_Update(remoteRequirement);
        }
        
        public void Requirement_Delete(int requirementId) {
            base.Channel.Requirement_Delete(requirementId);
        }
        
        public Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteVersion System_GetProductVersion() {
            return base.Channel.System_GetProductVersion();
        }
        
        public Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteSetting[] System_GetSettings() {
            return base.Channel.System_GetSettings();
        }
        
        public string System_GetArtifactUrl(int navigationLinkId, int projectId, int artifactId, string tabName) {
            return base.Channel.System_GetArtifactUrl(navigationLinkId, projectId, artifactId, tabName);
        }
        
        public Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteTask Task_Create(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteTask remoteTask) {
            return base.Channel.Task_Create(remoteTask);
        }
        
        public Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteTask[] Task_Retrieve(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteFilter[] remoteFilters, Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteSort remoteSort, int startingRow, int numberOfRows) {
            return base.Channel.Task_Retrieve(remoteFilters, remoteSort, startingRow, numberOfRows);
        }
        
        public Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteCustomProperty[] CustomProperty_RetrieveForArtifactType(int artifactTypeId) {
            return base.Channel.CustomProperty_RetrieveForArtifactType(artifactTypeId);
        }
        
        public void DataMapping_AddArtifactMappings(int dataSyncSystemId, int artifactTypeId, Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteDataMapping[] remoteDataMappings) {
            base.Channel.DataMapping_AddArtifactMappings(dataSyncSystemId, artifactTypeId, remoteDataMappings);
        }
        
        public void DataMapping_AddUserMappings(int dataSyncSystemId, Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteDataMapping[] remoteDataMappings) {
            base.Channel.DataMapping_AddUserMappings(dataSyncSystemId, remoteDataMappings);
        }
        
        public void DataMapping_RemoveArtifactMappings(int dataSyncSystemId, int artifactTypeId, Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteDataMapping[] remoteDataMappings) {
            base.Channel.DataMapping_RemoveArtifactMappings(dataSyncSystemId, artifactTypeId, remoteDataMappings);
        }
        
        public Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteDataMapping[] DataMapping_RetrieveArtifactMappings(int dataSyncSystemId, int artifactTypeId) {
            return base.Channel.DataMapping_RetrieveArtifactMappings(dataSyncSystemId, artifactTypeId);
        }
        
        public Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteDataMapping DataMapping_RetrieveCustomPropertyMapping(int dataSyncSystemId, int artifactTypeId, int customPropertyId) {
            return base.Channel.DataMapping_RetrieveCustomPropertyMapping(dataSyncSystemId, artifactTypeId, customPropertyId);
        }
        
        public Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteDataMapping[] DataMapping_RetrieveCustomPropertyValueMappings(int dataSyncSystemId, int artifactTypeId, int customPropertyId) {
            return base.Channel.DataMapping_RetrieveCustomPropertyValueMappings(dataSyncSystemId, artifactTypeId, customPropertyId);
        }
        
        public Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteDataMapping[] DataMapping_RetrieveFieldValueMappings(int dataSyncSystemId, int artifactFieldId) {
            return base.Channel.DataMapping_RetrieveFieldValueMappings(dataSyncSystemId, artifactFieldId);
        }
        
        public Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteDataMapping[] DataMapping_RetrieveProjectMappings(int dataSyncSystemId) {
            return base.Channel.DataMapping_RetrieveProjectMappings(dataSyncSystemId);
        }
        
        public Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteDataMapping[] DataMapping_RetrieveUserMappings(int dataSyncSystemId) {
            return base.Channel.DataMapping_RetrieveUserMappings(dataSyncSystemId);
        }
        
        public byte[] Document_OpenFile(int attachmentId) {
            return base.Channel.Document_OpenFile(attachmentId);
        }
        
        public Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteDocument Document_AddFile(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteDocument remoteDocument, byte[] binaryData) {
            return base.Channel.Document_AddFile(remoteDocument, binaryData);
        }
        
        public Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteDocument Document_AddUrl(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteDocument remoteDocument) {
            return base.Channel.Document_AddUrl(remoteDocument);
        }
        
        public Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteDocumentVersion Document_AddFileVersion(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteDocumentVersion remoteDocumentVersion, byte[] binaryData, bool makeCurrent) {
            return base.Channel.Document_AddFileVersion(remoteDocumentVersion, binaryData, makeCurrent);
        }
        
        public Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteDocumentVersion Document_AddUrlVersion(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteDocumentVersion remoteDocumentVersion, bool makeCurrent) {
            return base.Channel.Document_AddUrlVersion(remoteDocumentVersion, makeCurrent);
        }
        
        public void Document_DeleteFromArtifact(int attachmentId, int artifactTypeId, int artifactId) {
            base.Channel.Document_DeleteFromArtifact(attachmentId, artifactTypeId, artifactId);
        }
        
        public void Document_Delete(int attachmentId) {
            base.Channel.Document_Delete(attachmentId);
        }
        
        public Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteDocument[] Document_RetrieveForFolder(int folderId, Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteFilter[] remoteFilters, Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteSort remoteSort, int startingRow, int numberRows) {
            return base.Channel.Document_RetrieveForFolder(folderId, remoteFilters, remoteSort, startingRow, numberRows);
        }
        
        public Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteDocument[] Document_RetrieveForArtifact(int artifactTypeId, int artifactId, Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteFilter[] remoteFilters, Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteSort remoteSort) {
            return base.Channel.Document_RetrieveForArtifact(artifactTypeId, artifactId, remoteFilters, remoteSort);
        }
        
        public Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteDocument Document_RetrieveById(int attachmentId) {
            return base.Channel.Document_RetrieveById(attachmentId);
        }
        
        public Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteDocumentType[] Document_RetrieveTypes(bool activeOnly) {
            return base.Channel.Document_RetrieveTypes(activeOnly);
        }
        
        public Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteDocumentFolder[] Document_RetrieveFolders() {
            return base.Channel.Document_RetrieveFolders();
        }
        
        public Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteDocumentFolder Document_RetrieveFolderById(int folderId) {
            return base.Channel.Document_RetrieveFolderById(folderId);
        }
        
        public Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteDocumentFolder Document_AddFolder(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteDocumentFolder remoteDocumentFolder) {
            return base.Channel.Document_AddFolder(remoteDocumentFolder);
        }
        
        public void Document_DeleteFolder(int projectAttachmentFolderId) {
            base.Channel.Document_DeleteFolder(projectAttachmentFolderId);
        }
        
        public void Document_UpdateFolder(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteDocumentFolder remoteDocumentFolder) {
            base.Channel.Document_UpdateFolder(remoteDocumentFolder);
        }
        
        public Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteAssociation Association_Create(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteAssociation remoteAssociation) {
            return base.Channel.Association_Create(remoteAssociation);
        }
        
        public void Association_Update(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteAssociation remoteAssociation) {
            base.Channel.Association_Update(remoteAssociation);
        }
        
        public Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteAssociation[] Association_RetrieveForArtifact(int artifactTypeId, int artifactId, Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteFilter[] remoteFilters, Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteSort remoteSort) {
            return base.Channel.Association_RetrieveForArtifact(artifactTypeId, artifactId, remoteFilters, remoteSort);
        }
        
        public Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteIncidentPriority Incident_AddPriority(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteIncidentPriority remoteIncidentPriority) {
            return base.Channel.Incident_AddPriority(remoteIncidentPriority);
        }
        
        public Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteIncidentResolution[] Incident_AddResolutions(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteIncidentResolution[] remoteIncidentResolutions) {
            return base.Channel.Incident_AddResolutions(remoteIncidentResolutions);
        }
        
        public Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteIncidentSeverity Incident_AddSeverity(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteIncidentSeverity remoteIncidentSeverity) {
            return base.Channel.Incident_AddSeverity(remoteIncidentSeverity);
        }
        
        public Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteIncidentStatus Incident_AddStatus(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteIncidentStatus remoteIncidentStatus) {
            return base.Channel.Incident_AddStatus(remoteIncidentStatus);
        }
        
        public Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteIncidentType Incident_AddType(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteIncidentType remoteIncidentType) {
            return base.Channel.Incident_AddType(remoteIncidentType);
        }
        
        public Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteIncident Incident_Create(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteIncident remoteIncident) {
            return base.Channel.Incident_Create(remoteIncident);
        }
        
        public Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteIncident[] Incident_Retrieve(Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteFilter[] remoteFilters, Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteSort remoteSort, int startingRow, int numberOfRows) {
            return base.Channel.Incident_Retrieve(remoteFilters, remoteSort, startingRow, numberOfRows);
        }
        
        public Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteIncident Incident_RetrieveById(int incidentId) {
            return base.Channel.Incident_RetrieveById(incidentId);
        }
        
        public Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteIncident[] Incident_RetrieveForOwner() {
            return base.Channel.Incident_RetrieveForOwner();
        }
        
        public Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteIncident[] Incident_RetrieveNew(System.DateTime creationDate) {
            return base.Channel.Incident_RetrieveNew(creationDate);
        }
        
        public Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteIncidentPriority[] Incident_RetrievePriorities() {
            return base.Channel.Incident_RetrievePriorities();
        }
        
        public Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteIncidentResolution[] Incident_RetrieveResolutions(int incidentId) {
            return base.Channel.Incident_RetrieveResolutions(incidentId);
        }
        
        public Inflectra.Rapise.RapiseLauncher.Business.SpiraImportExport.RemoteIncidentSeverity[] Incident_RetrieveSeverities() {
            return base.Channel.Incident_RetrieveSeverities();
        }
    }
}
